package SpirvReflect

extern
{
	#link windows "./extern/spirv-reflect";

	SpvReflectResult spvReflectCreateShaderModule(size: uint64, p_code: *void, p_module: *SpvReflectShaderModule);
	SpvReflectResult spvReflectCreateShaderModule2(flags: uint32, size: uint64, p_code: *void, p_module: *SpvReflectShaderModule);
	SpvReflectResult spvReflectGetShaderModule(size: uint64, p_code: *void, p_module: *SpvReflectShaderModule);
	void spvReflectDestroyShaderModule(p_module: *SpvReflectShaderModule);
	uint32 spvReflectGetCodeSize(p_module: *SpvReflectShaderModule);
	*uint32 spvReflectGetCode(p_module: *SpvReflectShaderModule);
	*SpvReflectEntryPoint spvReflectGetEntryPoint(p_module: *SpvReflectShaderModule, entry_point: *byte);
	SpvReflectResult spvReflectEnumerateDescriptorBindings(p_module: *SpvReflectShaderModule, p_count: *uint32, pp_bindings: **SpvReflectDescriptorBinding);
	SpvReflectResult spvReflectEnumerateEntryPointDescriptorBindings(p_module: *SpvReflectShaderModule, entry_point: *byte, p_count: *uint32, pp_bindings: **SpvReflectDescriptorBinding);
	SpvReflectResult spvReflectEnumerateDescriptorSets(p_module: *SpvReflectShaderModule, p_count: *uint32, pp_sets: **SpvReflectDescriptorSet);
	SpvReflectResult spvReflectEnumerateEntryPointDescriptorSets(p_module: *SpvReflectShaderModule, entry_point: *byte, p_count: *uint32, pp_sets: **SpvReflectDescriptorSet);
	SpvReflectResult spvReflectEnumerateInterfaceVariables(p_module: *SpvReflectShaderModule, p_count: *uint32, pp_variables: **SpvReflectInterfaceVariable);
	SpvReflectResult spvReflectEnumerateEntryPointInterfaceVariables(p_module: *SpvReflectShaderModule, entry_point: *byte, p_count: *uint32, pp_variables: **SpvReflectInterfaceVariable);
	SpvReflectResult spvReflectEnumerateInputVariables(p_module: *SpvReflectShaderModule, p_count: *uint32, pp_variables: **SpvReflectInterfaceVariable);
	SpvReflectResult spvReflectEnumerateEntryPointInputVariables(p_module: *SpvReflectShaderModule, entry_point: *byte, p_count: *uint32, pp_variables: **SpvReflectInterfaceVariable);
	SpvReflectResult spvReflectEnumerateOutputVariables(p_module: *SpvReflectShaderModule, p_count: *uint32, pp_variables: **SpvReflectInterfaceVariable);
	SpvReflectResult spvReflectEnumerateEntryPointOutputVariables(p_module: *SpvReflectShaderModule, entry_point: *byte, p_count: *uint32, pp_variables: **SpvReflectInterfaceVariable);
	SpvReflectResult spvReflectEnumeratePushConstantBlocks(p_module: *SpvReflectShaderModule, p_count: *uint32, pp_blocks: **SpvReflectBlockVariable);
	SpvReflectResult spvReflectEnumeratePushConstants(p_module: *SpvReflectShaderModule, p_count: *uint32, pp_blocks: **SpvReflectBlockVariable);
	SpvReflectResult spvReflectEnumerateEntryPointPushConstantBlocks(p_module: *SpvReflectShaderModule, entry_point: *byte, p_count: *uint32, pp_blocks: **SpvReflectBlockVariable);
	SpvReflectResult spvReflectEnumerateSpecializationConstants(p_module: *SpvReflectShaderModule, p_count: *uint32, pp_constants: **SpvReflectSpecializationConstant);
	*SpvReflectDescriptorBinding spvReflectGetDescriptorBinding(p_module: *SpvReflectShaderModule, binding_number: uint32, set_number: uint32, p_result: *SpvReflectResult);
	*SpvReflectDescriptorBinding spvReflectGetEntryPointDescriptorBinding(p_module: *SpvReflectShaderModule, entry_point: *byte, binding_number: uint32, set_number: uint32, p_result: *SpvReflectResult);
	*SpvReflectDescriptorSet spvReflectGetDescriptorSet(p_module: *SpvReflectShaderModule, set_number: uint32, p_result: *SpvReflectResult);
	*SpvReflectDescriptorSet spvReflectGetEntryPointDescriptorSet(p_module: *SpvReflectShaderModule, entry_point: *byte, set_number: uint32, p_result: *SpvReflectResult);
	*SpvReflectInterfaceVariable spvReflectGetInputVariableByLocation(p_module: *SpvReflectShaderModule, location: uint32, p_result: *SpvReflectResult);
	*SpvReflectInterfaceVariable spvReflectGetInputVariable(p_module: *SpvReflectShaderModule, location: uint32, p_result: *SpvReflectResult);
	*SpvReflectInterfaceVariable spvReflectGetEntryPointInputVariableByLocation(p_module: *SpvReflectShaderModule, entry_point: *byte, location: uint32, p_result: *SpvReflectResult);
	*SpvReflectInterfaceVariable spvReflectGetInputVariableBySemantic(p_module: *SpvReflectShaderModule, semantic: *byte, p_result: *SpvReflectResult);
	*SpvReflectInterfaceVariable spvReflectGetEntryPointInputVariableBySemantic(p_module: *SpvReflectShaderModule, entry_point: *byte, semantic: *byte, p_result: *SpvReflectResult);
	*SpvReflectInterfaceVariable spvReflectGetOutputVariableByLocation(p_module: *SpvReflectShaderModule, location: uint32, p_result: *SpvReflectResult);
	*SpvReflectInterfaceVariable spvReflectGetOutputVariable(p_module: *SpvReflectShaderModule, location: uint32, p_result: *SpvReflectResult);
	*SpvReflectInterfaceVariable spvReflectGetEntryPointOutputVariableByLocation(p_module: *SpvReflectShaderModule, entry_point: *byte, location: uint32, p_result: *SpvReflectResult);
	*SpvReflectInterfaceVariable spvReflectGetOutputVariableBySemantic(p_module: *SpvReflectShaderModule, semantic: *byte, p_result: *SpvReflectResult);
	*SpvReflectInterfaceVariable spvReflectGetEntryPointOutputVariableBySemantic(p_module: *SpvReflectShaderModule, entry_point: *byte, semantic: *byte, p_result: *SpvReflectResult);
	*SpvReflectBlockVariable spvReflectGetPushConstantBlock(p_module: *SpvReflectShaderModule, index: uint32, p_result: *SpvReflectResult);
	*SpvReflectBlockVariable spvReflectGetPushConstant(p_module: *SpvReflectShaderModule, index: uint32, p_result: *SpvReflectResult);
	*SpvReflectBlockVariable spvReflectGetEntryPointPushConstantBlock(p_module: *SpvReflectShaderModule, entry_point: *byte, p_result: *SpvReflectResult);
	SpvReflectResult spvReflectChangeDescriptorBindingNumbers(p_module: *SpvReflectShaderModule, p_binding: *SpvReflectDescriptorBinding, new_binding_number: uint32, new_set_number: uint32);
	SpvReflectResult spvReflectChangeDescriptorBindingNumber(p_module: *SpvReflectShaderModule, p_descriptor_binding: *SpvReflectDescriptorBinding, new_binding_number: uint32, optional_new_set_number: uint32);
	SpvReflectResult spvReflectChangeDescriptorSetNumber(p_module: *SpvReflectShaderModule, p_set: *SpvReflectDescriptorSet, new_set_number: uint32);
	SpvReflectResult spvReflectChangeInputVariableLocation(p_module: *SpvReflectShaderModule, p_input_variable: *SpvReflectInterfaceVariable, new_location: uint32);
	SpvReflectResult spvReflectChangeOutputVariableLocation(p_module: *SpvReflectShaderModule, p_output_variable: *SpvReflectInterfaceVariable, new_location: uint32);
	*byte spvReflectBlockVariableTypeName(p_var: *SpvReflectBlockVariable);
}

enum SpvReflectResult: uint32
{
	SPV_REFLECT_RESULT_SUCCESS = 0,
	SPV_REFLECT_RESULT_NOT_READY = 1,
	SPV_REFLECT_RESULT_ERROR_PARSE_FAILED = 2,
	SPV_REFLECT_RESULT_ERROR_ALLOC_FAILED = 3,
	SPV_REFLECT_RESULT_ERROR_RANGE_EXCEEDED = 4,
	SPV_REFLECT_RESULT_ERROR_NULL_POINTER = 5,
	SPV_REFLECT_RESULT_ERROR_INTERNAL_ERROR = 6,
	SPV_REFLECT_RESULT_ERROR_COUNT_MISMATCH = 7,
	SPV_REFLECT_RESULT_ERROR_ELEMENT_NOT_FOUND = 8,
	SPV_REFLECT_RESULT_ERROR_SPIRV_INVALID_CODE_SIZE = 9,
	SPV_REFLECT_RESULT_ERROR_SPIRV_INVALID_MAGIC_NUMBER = 10,
	SPV_REFLECT_RESULT_ERROR_SPIRV_UNEXPECTED_EOF = 11,
	SPV_REFLECT_RESULT_ERROR_SPIRV_INVALID_ID_REFERENCE = 12,
	SPV_REFLECT_RESULT_ERROR_SPIRV_SET_NUMBER_OVERFLOW = 13,
	SPV_REFLECT_RESULT_ERROR_SPIRV_INVALID_STORAGE_CLASS = 14,
	SPV_REFLECT_RESULT_ERROR_SPIRV_RECURSION = 15,
	SPV_REFLECT_RESULT_ERROR_SPIRV_INVALID_INSTRUCTION = 16,
	SPV_REFLECT_RESULT_ERROR_SPIRV_UNEXPECTED_BLOCK_DATA = 17,
	SPV_REFLECT_RESULT_ERROR_SPIRV_INVALID_BLOCK_MEMBER_REFERENCE = 18,
	SPV_REFLECT_RESULT_ERROR_SPIRV_INVALID_ENTRY_POINT = 19,
	SPV_REFLECT_RESULT_ERROR_SPIRV_INVALID_EXECUTION_MODE = 20,
	SPV_REFLECT_RESULT_ERROR_SPIRV_MAX_RECURSIVE_EXCEEDED = 21
}

enum SpvReflectModuleFlagBits: uint32
{
	SPV_REFLECT_MODULE_FLAG_NONE = 0,
	SPV_REFLECT_MODULE_FLAG_NO_COPY = 1
}

enum SpvReflectTypeFlagBits: uint32
{
	SPV_REFLECT_TYPE_FLAG_UNDEFINED = 0,
	SPV_REFLECT_TYPE_FLAG_VOID = 1,
	SPV_REFLECT_TYPE_FLAG_BOOL = 2,
	SPV_REFLECT_TYPE_FLAG_INT = 4,
	SPV_REFLECT_TYPE_FLAG_FLOAT = 8,
	SPV_REFLECT_TYPE_FLAG_VECTOR = 256,
	SPV_REFLECT_TYPE_FLAG_MATRIX = 512,
	SPV_REFLECT_TYPE_FLAG_EXTERNAL_IMAGE = 65536,
	SPV_REFLECT_TYPE_FLAG_EXTERNAL_SAMPLER = 131072,
	SPV_REFLECT_TYPE_FLAG_EXTERNAL_SAMPLED_IMAGE = 262144,
	SPV_REFLECT_TYPE_FLAG_EXTERNAL_BLOCK = 524288,
	SPV_REFLECT_TYPE_FLAG_EXTERNAL_ACCELERATION_STRUCTURE = 1048576,
	SPV_REFLECT_TYPE_FLAG_EXTERNAL_MASK = 16711680,
	SPV_REFLECT_TYPE_FLAG_STRUCT = 268435456,
	SPV_REFLECT_TYPE_FLAG_ARRAY = 536870912,
	SPV_REFLECT_TYPE_FLAG_REF = 1073741824
}

enum SpvReflectDecorationFlagBits: uint32
{
	SPV_REFLECT_DECORATION_NONE = 0,
	SPV_REFLECT_DECORATION_BLOCK = 1,
	SPV_REFLECT_DECORATION_BUFFER_BLOCK = 2,
	SPV_REFLECT_DECORATION_ROW_MAJOR = 4,
	SPV_REFLECT_DECORATION_COLUMN_MAJOR = 8,
	SPV_REFLECT_DECORATION_BUILT_IN = 16,
	SPV_REFLECT_DECORATION_NOPERSPECTIVE = 32,
	SPV_REFLECT_DECORATION_FLAT = 64,
	SPV_REFLECT_DECORATION_NON_WRITABLE = 128,
	SPV_REFLECT_DECORATION_RELAXED_PRECISION = 256,
	SPV_REFLECT_DECORATION_NON_READABLE = 512,
	SPV_REFLECT_DECORATION_PATCH = 1024,
	SPV_REFLECT_DECORATION_PER_VERTEX = 2048,
	SPV_REFLECT_DECORATION_PER_TASK = 4096,
	SPV_REFLECT_DECORATION_WEIGHT_TEXTURE = 8192,
	SPV_REFLECT_DECORATION_BLOCK_MATCH_TEXTURE = 16384
}

enum SpvReflectUserType: uint32
{
	SPV_REFLECT_USER_TYPE_INVALID = 0,
	SPV_REFLECT_USER_TYPE_CBUFFER = 1,
	SPV_REFLECT_USER_TYPE_TBUFFER = 2,
	SPV_REFLECT_USER_TYPE_APPEND_STRUCTURED_BUFFER = 3,
	SPV_REFLECT_USER_TYPE_BUFFER = 4,
	SPV_REFLECT_USER_TYPE_BYTE_ADDRESS_BUFFER = 5,
	SPV_REFLECT_USER_TYPE_CONSTANT_BUFFER = 6,
	SPV_REFLECT_USER_TYPE_CONSUME_STRUCTURED_BUFFER = 7,
	SPV_REFLECT_USER_TYPE_INPUT_PATCH = 8,
	SPV_REFLECT_USER_TYPE_OUTPUT_PATCH = 9,
	SPV_REFLECT_USER_TYPE_RASTERIZER_ORDERED_BUFFER = 10,
	SPV_REFLECT_USER_TYPE_RASTERIZER_ORDERED_BYTE_ADDRESS_BUFFER = 11,
	SPV_REFLECT_USER_TYPE_RASTERIZER_ORDERED_STRUCTURED_BUFFER = 12,
	SPV_REFLECT_USER_TYPE_RASTERIZER_ORDERED_TEXTURE_1D = 13,
	SPV_REFLECT_USER_TYPE_RASTERIZER_ORDERED_TEXTURE_1D_ARRAY = 14,
	SPV_REFLECT_USER_TYPE_RASTERIZER_ORDERED_TEXTURE_2D = 15,
	SPV_REFLECT_USER_TYPE_RASTERIZER_ORDERED_TEXTURE_2D_ARRAY = 16,
	SPV_REFLECT_USER_TYPE_RASTERIZER_ORDERED_TEXTURE_3D = 17,
	SPV_REFLECT_USER_TYPE_RAYTRACING_ACCELERATION_STRUCTURE = 18,
	SPV_REFLECT_USER_TYPE_RW_BUFFER = 19,
	SPV_REFLECT_USER_TYPE_RW_BYTE_ADDRESS_BUFFER = 20,
	SPV_REFLECT_USER_TYPE_RW_STRUCTURED_BUFFER = 21,
	SPV_REFLECT_USER_TYPE_RW_TEXTURE_1D = 22,
	SPV_REFLECT_USER_TYPE_RW_TEXTURE_1D_ARRAY = 23,
	SPV_REFLECT_USER_TYPE_RW_TEXTURE_2D = 24,
	SPV_REFLECT_USER_TYPE_RW_TEXTURE_2D_ARRAY = 25,
	SPV_REFLECT_USER_TYPE_RW_TEXTURE_3D = 26,
	SPV_REFLECT_USER_TYPE_STRUCTURED_BUFFER = 27,
	SPV_REFLECT_USER_TYPE_SUBPASS_INPUT = 28,
	SPV_REFLECT_USER_TYPE_SUBPASS_INPUT_MS = 29,
	SPV_REFLECT_USER_TYPE_TEXTURE_1D = 30,
	SPV_REFLECT_USER_TYPE_TEXTURE_1D_ARRAY = 31,
	SPV_REFLECT_USER_TYPE_TEXTURE_2D = 32,
	SPV_REFLECT_USER_TYPE_TEXTURE_2D_ARRAY = 33,
	SPV_REFLECT_USER_TYPE_TEXTURE_2DMS = 34,
	SPV_REFLECT_USER_TYPE_TEXTURE_2DMS_ARRAY = 35,
	SPV_REFLECT_USER_TYPE_TEXTURE_3D = 36,
	SPV_REFLECT_USER_TYPE_TEXTURE_BUFFER = 37,
	SPV_REFLECT_USER_TYPE_TEXTURE_CUBE = 38,
	SPV_REFLECT_USER_TYPE_TEXTURE_CUBE_ARRAY = 39
}

enum SpvReflectResourceType: uint32
{
	SPV_REFLECT_RESOURCE_FLAG_UNDEFINED = 0,
	SPV_REFLECT_RESOURCE_FLAG_SAMPLER = 1,
	SPV_REFLECT_RESOURCE_FLAG_CBV = 2,
	SPV_REFLECT_RESOURCE_FLAG_SRV = 4,
	SPV_REFLECT_RESOURCE_FLAG_UAV = 8
}

enum SpvReflectFormat: uint32
{
	SPV_REFLECT_FORMAT_UNDEFINED = 0,
	SPV_REFLECT_FORMAT_R16_UINT = 74,
	SPV_REFLECT_FORMAT_R16_SINT = 75,
	SPV_REFLECT_FORMAT_R16_SFLOAT = 76,
	SPV_REFLECT_FORMAT_R16G16_UINT = 81,
	SPV_REFLECT_FORMAT_R16G16_SINT = 82,
	SPV_REFLECT_FORMAT_R16G16_SFLOAT = 83,
	SPV_REFLECT_FORMAT_R16G16B16_UINT = 88,
	SPV_REFLECT_FORMAT_R16G16B16_SINT = 89,
	SPV_REFLECT_FORMAT_R16G16B16_SFLOAT = 90,
	SPV_REFLECT_FORMAT_R16G16B16A16_UINT = 95,
	SPV_REFLECT_FORMAT_R16G16B16A16_SINT = 96,
	SPV_REFLECT_FORMAT_R16G16B16A16_SFLOAT = 97,
	SPV_REFLECT_FORMAT_R32_UINT = 98,
	SPV_REFLECT_FORMAT_R32_SINT = 99,
	SPV_REFLECT_FORMAT_R32_SFLOAT = 100,
	SPV_REFLECT_FORMAT_R32G32_UINT = 101,
	SPV_REFLECT_FORMAT_R32G32_SINT = 102,
	SPV_REFLECT_FORMAT_R32G32_SFLOAT = 103,
	SPV_REFLECT_FORMAT_R32G32B32_UINT = 104,
	SPV_REFLECT_FORMAT_R32G32B32_SINT = 105,
	SPV_REFLECT_FORMAT_R32G32B32_SFLOAT = 106,
	SPV_REFLECT_FORMAT_R32G32B32A32_UINT = 107,
	SPV_REFLECT_FORMAT_R32G32B32A32_SINT = 108,
	SPV_REFLECT_FORMAT_R32G32B32A32_SFLOAT = 109,
	SPV_REFLECT_FORMAT_R64_UINT = 110,
	SPV_REFLECT_FORMAT_R64_SINT = 111,
	SPV_REFLECT_FORMAT_R64_SFLOAT = 112,
	SPV_REFLECT_FORMAT_R64G64_UINT = 113,
	SPV_REFLECT_FORMAT_R64G64_SINT = 114,
	SPV_REFLECT_FORMAT_R64G64_SFLOAT = 115,
	SPV_REFLECT_FORMAT_R64G64B64_UINT = 116,
	SPV_REFLECT_FORMAT_R64G64B64_SINT = 117,
	SPV_REFLECT_FORMAT_R64G64B64_SFLOAT = 118,
	SPV_REFLECT_FORMAT_R64G64B64A64_UINT = 119,
	SPV_REFLECT_FORMAT_R64G64B64A64_SINT = 120,
	SPV_REFLECT_FORMAT_R64G64B64A64_SFLOAT = 121
}

enum SpvReflectVariableFlagBits: uint32
{
	SPV_REFLECT_VARIABLE_FLAGS_NONE = 0,
	SPV_REFLECT_VARIABLE_FLAGS_UNUSED = 1,
	SPV_REFLECT_VARIABLE_FLAGS_PHYSICAL_POINTER_COPY = 2
}

enum SpvReflectDescriptorType: uint32
{
	SPV_REFLECT_DESCRIPTOR_TYPE_SAMPLER = 0,
	SPV_REFLECT_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER = 1,
	SPV_REFLECT_DESCRIPTOR_TYPE_SAMPLED_IMAGE = 2,
	SPV_REFLECT_DESCRIPTOR_TYPE_STORAGE_IMAGE = 3,
	SPV_REFLECT_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER = 4,
	SPV_REFLECT_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER = 5,
	SPV_REFLECT_DESCRIPTOR_TYPE_UNIFORM_BUFFER = 6,
	SPV_REFLECT_DESCRIPTOR_TYPE_STORAGE_BUFFER = 7,
	SPV_REFLECT_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC = 8,
	SPV_REFLECT_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC = 9,
	SPV_REFLECT_DESCRIPTOR_TYPE_INPUT_ATTACHMENT = 10,
	SPV_REFLECT_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR = 1000150000
}

enum SpvReflectShaderStageFlagBits: uint32
{
	SPV_REFLECT_SHADER_STAGE_VERTEX_BIT = 1,
	SPV_REFLECT_SHADER_STAGE_TESSELLATION_CONTROL_BIT = 2,
	SPV_REFLECT_SHADER_STAGE_TESSELLATION_EVALUATION_BIT = 4,
	SPV_REFLECT_SHADER_STAGE_GEOMETRY_BIT = 8,
	SPV_REFLECT_SHADER_STAGE_FRAGMENT_BIT = 16,
	SPV_REFLECT_SHADER_STAGE_COMPUTE_BIT = 32,
	SPV_REFLECT_SHADER_STAGE_TASK_BIT_NV = 64,
	SPV_REFLECT_SHADER_STAGE_TASK_BIT_EXT = 64,
	SPV_REFLECT_SHADER_STAGE_MESH_BIT_NV = 128,
	SPV_REFLECT_SHADER_STAGE_MESH_BIT_EXT = 128,
	SPV_REFLECT_SHADER_STAGE_RAYGEN_BIT_KHR = 256,
	SPV_REFLECT_SHADER_STAGE_ANY_HIT_BIT_KHR = 512,
	SPV_REFLECT_SHADER_STAGE_CLOSEST_HIT_BIT_KHR = 1024,
	SPV_REFLECT_SHADER_STAGE_MISS_BIT_KHR = 2048,
	SPV_REFLECT_SHADER_STAGE_INTERSECTION_BIT_KHR = 4096,
	SPV_REFLECT_SHADER_STAGE_CALLABLE_BIT_KHR = 8192
}

enum SpvImageFormat: uint32 
{
	SpvImageFormatUnknown = 0,
	SpvImageFormatRgba32f = 1,
	SpvImageFormatRgba16f = 2,
	SpvImageFormatR32f = 3,
	SpvImageFormatRgba8 = 4,
	SpvImageFormatRgba8Snorm = 5,
	SpvImageFormatRg32f = 6,
	SpvImageFormatRg16f = 7,
	SpvImageFormatR11fG11fB10f = 8,
	SpvImageFormatR16f = 9,
	SpvImageFormatRgba16 = 10,
	SpvImageFormatRgb10A2 = 11,
	SpvImageFormatRg16 = 12,
	SpvImageFormatRg8 = 13,
	SpvImageFormatR16 = 14,
	SpvImageFormatR8 = 15,
	SpvImageFormatRgba16Snorm = 16,
	SpvImageFormatRg16Snorm = 17,
	SpvImageFormatRg8Snorm = 18,
	SpvImageFormatR16Snorm = 19,
	SpvImageFormatR8Snorm = 20,
	SpvImageFormatRgba32i = 21,
	SpvImageFormatRgba16i = 22,
	SpvImageFormatRgba8i = 23,
	SpvImageFormatR32i = 24,
	SpvImageFormatRg32i = 25,
	SpvImageFormatRg16i = 26,
	SpvImageFormatRg8i = 27,
	SpvImageFormatR16i = 28,
	SpvImageFormatR8i = 29,
	SpvImageFormatRgba32ui = 30,
	SpvImageFormatRgba16ui = 31,
	SpvImageFormatRgba8ui = 32,
	SpvImageFormatR32ui = 33,
	SpvImageFormatRgb10a2ui = 34,
	SpvImageFormatRg32ui = 35,
	SpvImageFormatRg16ui = 36,
	SpvImageFormatRg8ui = 37,
	SpvImageFormatR16ui = 38,
	SpvImageFormatR8ui = 39,
	SpvImageFormatR64ui = 40,
	SpvImageFormatR64i = 41,
	SpvImageFormatMax = 0x7fffffff
}

enum SpvDim: uint32
{
	SpvDim1D = 0,
	SpvDim2D = 1,
	SpvDim3D = 2,
	SpvDimCube = 3,
	SpvDimRect = 4,
	SpvDimBuffer = 5,
	SpvDimSubpassData = 6,
	SpvDimTileImageDataEXT = 4173,
	SpvDimMax = 0x7fffffff
}

enum SpvReflectGenerator: uint32
{
	SPV_REFLECT_GENERATOR_KHRONOS_LLVM_SPIRV_TRANSLATOR = 6,
	SPV_REFLECT_GENERATOR_KHRONOS_SPIRV_TOOLS_ASSEMBLER = 7,
	SPV_REFLECT_GENERATOR_KHRONOS_GLSLANG_REFERENCE_FRONT_END = 8,
	SPV_REFLECT_GENERATOR_GOOGLE_SHADERC_OVER_GLSLANG = 13,
	SPV_REFLECT_GENERATOR_GOOGLE_SPIREGG = 14,
	SPV_REFLECT_GENERATOR_GOOGLE_RSPIRV = 15,
	SPV_REFLECT_GENERATOR_X_LEGEND_MESA_MESAIR_SPIRV_TRANSLATOR = 16,
	SPV_REFLECT_GENERATOR_KHRONOS_SPIRV_TOOLS_LINKER = 17,
	SPV_REFLECT_GENERATOR_WINE_VKD3D_SHADER_COMPILER = 18,
	SPV_REFLECT_GENERATOR_CLAY_CLAY_SHADER_COMPILER = 19,
	SPV_REFLECT_GENERATOR_SLANG_SHADER_COMPILER = 40
}

enum SpvStorageClass: uint32 
{
	SpvStorageClassUniformConstant = 0,
	SpvStorageClassInput = 1,
	SpvStorageClassUniform = 2,
	SpvStorageClassOutput = 3,
	SpvStorageClassWorkgroup = 4,
	SpvStorageClassCrossWorkgroup = 5,
	SpvStorageClassPrivate = 6,
	SpvStorageClassFunction = 7,
	SpvStorageClassGeneric = 8,
	SpvStorageClassPushConstant = 9,
	SpvStorageClassAtomicCounter = 10,
	SpvStorageClassImage = 11,
	SpvStorageClassStorageBuffer = 12,
	SpvStorageClassTileImageEXT = 4172,
	SpvStorageClassTileAttachmentQCOM = 4491,
	SpvStorageClassNodePayloadAMDX = 5068,
	SpvStorageClassCallableDataKHR = 5328,
	SpvStorageClassCallableDataNV = 5328,
	SpvStorageClassIncomingCallableDataKHR = 5329,
	SpvStorageClassIncomingCallableDataNV = 5329,
	SpvStorageClassRayPayloadKHR = 5338,
	SpvStorageClassRayPayloadNV = 5338,
	SpvStorageClassHitAttributeKHR = 5339,
	SpvStorageClassHitAttributeNV = 5339,
	SpvStorageClassIncomingRayPayloadKHR = 5342,
	SpvStorageClassIncomingRayPayloadNV = 5342,
	SpvStorageClassShaderRecordBufferKHR = 5343,
	SpvStorageClassShaderRecordBufferNV = 5343,
	SpvStorageClassPhysicalStorageBuffer = 5349,
	SpvStorageClassPhysicalStorageBufferEXT = 5349,
	SpvStorageClassHitObjectAttributeNV = 5385,
	SpvStorageClassTaskPayloadWorkgroupEXT = 5402,
	SpvStorageClassCodeSectionINTEL = 5605,
	SpvStorageClassDeviceOnlyINTEL = 5936,
	SpvStorageClassHostOnlyINTEL = 5937,
	SpvStorageClassMax = 0x7fffffff,
}

enum SpvExecutionModel: uint32 
{
	SpvExecutionModelVertex = 0,
	SpvExecutionModelTessellationControl = 1,
	SpvExecutionModelTessellationEvaluation = 2,
	SpvExecutionModelGeometry = 3,
	SpvExecutionModelFragment = 4,
	SpvExecutionModelGLCompute = 5,
	SpvExecutionModelKernel = 6,
	SpvExecutionModelTaskNV = 5267,
	SpvExecutionModelMeshNV = 5268,
	SpvExecutionModelRayGenerationKHR = 5313,
	SpvExecutionModelRayGenerationNV = 5313,
	SpvExecutionModelIntersectionKHR = 5314,
	SpvExecutionModelIntersectionNV = 5314,
	SpvExecutionModelAnyHitKHR = 5315,
	SpvExecutionModelAnyHitNV = 5315,
	SpvExecutionModelClosestHitKHR = 5316,
	SpvExecutionModelClosestHitNV = 5316,
	SpvExecutionModelMissKHR = 5317,
	SpvExecutionModelMissNV = 5317,
	SpvExecutionModelCallableKHR = 5318,
	SpvExecutionModelCallableNV = 5318,
	SpvExecutionModelTaskEXT = 5364,
	SpvExecutionModelMeshEXT = 5365,
	SpvExecutionModelMax = 0x7fffffff
}

enum SpvExecutionMode: uint32 
{
	SpvExecutionModeInvocations = 0,
	SpvExecutionModeSpacingEqual = 1,
	SpvExecutionModeSpacingFractionalEven = 2,
	SpvExecutionModeSpacingFractionalOdd = 3,
	SpvExecutionModeVertexOrderCw = 4,
	SpvExecutionModeVertexOrderCcw = 5,
	SpvExecutionModePixelCenterInteger = 6,
	SpvExecutionModeOriginUpperLeft = 7,
	SpvExecutionModeOriginLowerLeft = 8,
	SpvExecutionModeEarlyFragmentTests = 9,
	SpvExecutionModePointMode = 10,
	SpvExecutionModeXfb = 11,
	SpvExecutionModeDepthReplacing = 12,
	SpvExecutionModeDepthGreater = 14,
	SpvExecutionModeDepthLess = 15,
	SpvExecutionModeDepthUnchanged = 16,
	SpvExecutionModeLocalSize = 17,
	SpvExecutionModeLocalSizeHint = 18,
	SpvExecutionModeInputPoints = 19,
	SpvExecutionModeInputLines = 20,
	SpvExecutionModeInputLinesAdjacency = 21,
	SpvExecutionModeTriangles = 22,
	SpvExecutionModeInputTrianglesAdjacency = 23,
	SpvExecutionModeQuads = 24,
	SpvExecutionModeIsolines = 25,
	SpvExecutionModeOutputVertices = 26,
	SpvExecutionModeOutputPoints = 27,
	SpvExecutionModeOutputLineStrip = 28,
	SpvExecutionModeOutputTriangleStrip = 29,
	SpvExecutionModeVecTypeHint = 30,
	SpvExecutionModeContractionOff = 31,
	SpvExecutionModeInitializer = 33,
	SpvExecutionModeFinalizer = 34,
	SpvExecutionModeSubgroupSize = 35,
	SpvExecutionModeSubgroupsPerWorkgroup = 36,
	SpvExecutionModeSubgroupsPerWorkgroupId = 37,
	SpvExecutionModeLocalSizeId = 38,
	SpvExecutionModeLocalSizeHintId = 39,
	SpvExecutionModeNonCoherentColorAttachmentReadEXT = 4169,
	SpvExecutionModeNonCoherentDepthAttachmentReadEXT = 4170,
	SpvExecutionModeNonCoherentStencilAttachmentReadEXT = 4171,
	SpvExecutionModeSubgroupUniformControlFlowKHR = 4421,
	SpvExecutionModePostDepthCoverage = 4446,
	SpvExecutionModeDenormPreserve = 4459,
	SpvExecutionModeDenormFlushToZero = 4460,
	SpvExecutionModeSignedZeroInfNanPreserve = 4461,
	SpvExecutionModeRoundingModeRTE = 4462,
	SpvExecutionModeRoundingModeRTZ = 4463,
	SpvExecutionModeNonCoherentTileAttachmentReadQCOM = 4489,
	SpvExecutionModeTileShadingRateQCOM = 4490,
	SpvExecutionModeEarlyAndLateFragmentTestsAMD = 5017,
	SpvExecutionModeStencilRefReplacingEXT = 5027,
	SpvExecutionModeCoalescingAMDX = 5069,
	SpvExecutionModeIsApiEntryAMDX = 5070,
	SpvExecutionModeMaxNodeRecursionAMDX = 5071,
	SpvExecutionModeStaticNumWorkgroupsAMDX = 5072,
	SpvExecutionModeShaderIndexAMDX = 5073,
	SpvExecutionModeMaxNumWorkgroupsAMDX = 5077,
	SpvExecutionModeStencilRefUnchangedFrontAMD = 5079,
	SpvExecutionModeStencilRefGreaterFrontAMD = 5080,
	SpvExecutionModeStencilRefLessFrontAMD = 5081,
	SpvExecutionModeStencilRefUnchangedBackAMD = 5082,
	SpvExecutionModeStencilRefGreaterBackAMD = 5083,
	SpvExecutionModeStencilRefLessBackAMD = 5084,
	SpvExecutionModeQuadDerivativesKHR = 5088,
	SpvExecutionModeRequireFullQuadsKHR = 5089,
	SpvExecutionModeSharesInputWithAMDX = 5102,
	SpvExecutionModeOutputLinesEXT = 5269,
	SpvExecutionModeOutputLinesNV = 5269,
	SpvExecutionModeOutputPrimitivesEXT = 5270,
	SpvExecutionModeOutputPrimitivesNV = 5270,
	SpvExecutionModeDerivativeGroupQuadsKHR = 5289,
	SpvExecutionModeDerivativeGroupQuadsNV = 5289,
	SpvExecutionModeDerivativeGroupLinearKHR = 5290,
	SpvExecutionModeDerivativeGroupLinearNV = 5290,
	SpvExecutionModeOutputTrianglesEXT = 5298,
	SpvExecutionModeOutputTrianglesNV = 5298,
	SpvExecutionModePixelInterlockOrderedEXT = 5366,
	SpvExecutionModePixelInterlockUnorderedEXT = 5367,
	SpvExecutionModeSampleInterlockOrderedEXT = 5368,
	SpvExecutionModeSampleInterlockUnorderedEXT = 5369,
	SpvExecutionModeShadingRateInterlockOrderedEXT = 5370,
	SpvExecutionModeShadingRateInterlockUnorderedEXT = 5371,
	SpvExecutionModeSharedLocalMemorySizeINTEL = 5618,
	SpvExecutionModeRoundingModeRTPINTEL = 5620,
	SpvExecutionModeRoundingModeRTNINTEL = 5621,
	SpvExecutionModeFloatingPointModeALTINTEL = 5622,
	SpvExecutionModeFloatingPointModeIEEEINTEL = 5623,
	SpvExecutionModeMaxWorkgroupSizeINTEL = 5893,
	SpvExecutionModeMaxWorkDimINTEL = 5894,
	SpvExecutionModeNoGlobalOffsetINTEL = 5895,
	SpvExecutionModeNumSIMDWorkitemsINTEL = 5896,
	SpvExecutionModeSchedulerTargetFmaxMhzINTEL = 5903,
	SpvExecutionModeMaximallyReconvergesKHR = 6023,
	SpvExecutionModeFPFastMathDefault = 6028,
	SpvExecutionModeStreamingInterfaceINTEL = 6154,
	SpvExecutionModeRegisterMapInterfaceINTEL = 6160,
	SpvExecutionModeNamedBarrierCountINTEL = 6417,
	SpvExecutionModeMaximumRegistersINTEL = 6461,
	SpvExecutionModeMaximumRegistersIdINTEL = 6462,
	SpvExecutionModeNamedMaximumRegistersINTEL = 6463,
	SpvExecutionModeMax = 0x7fffffff,
}

enum SpvSourceLanguage: uint32
{
	SpvSourceLanguageUnknown = 0,
	SpvSourceLanguageESSL = 1,
	SpvSourceLanguageGLSL = 2,
	SpvSourceLanguageOpenCL_C = 3,
	SpvSourceLanguageOpenCL_CPP = 4,
	SpvSourceLanguageHLSL = 5,
	SpvSourceLanguageCPP_for_OpenCL = 6,
	SpvSourceLanguageSYCL = 7,
	SpvSourceLanguageHERO_C = 8,
	SpvSourceLanguageNZSL = 9,
	SpvSourceLanguageWGSL = 10,
	SpvSourceLanguageSlang = 11,
	SpvSourceLanguageZig = 12,
	SpvSourceLanguageRust = 13,
	SpvSourceLanguageMax = 0x7fffffff,
}

enum SpvCapability: uint32 
{
	SpvCapabilityMatrix = 0,
	SpvCapabilityShader = 1,
	SpvCapabilityGeometry = 2,
	SpvCapabilityTessellation = 3,
	SpvCapabilityAddresses = 4,
	SpvCapabilityLinkage = 5,
	SpvCapabilityKernel = 6,
	SpvCapabilityVector16 = 7,
	SpvCapabilityFloat16Buffer = 8,
	SpvCapabilityFloat16 = 9,
	SpvCapabilityFloat64 = 10,
	SpvCapabilityInt64 = 11,
	SpvCapabilityInt64Atomics = 12,
	SpvCapabilityImageBasic = 13,
	SpvCapabilityImageReadWrite = 14,
	SpvCapabilityImageMipmap = 15,
	SpvCapabilityPipes = 17,
	SpvCapabilityGroups = 18,
	SpvCapabilityDeviceEnqueue = 19,
	SpvCapabilityLiteralSampler = 20,
	SpvCapabilityAtomicStorage = 21,
	SpvCapabilityInt16 = 22,
	SpvCapabilityTessellationPointSize = 23,
	SpvCapabilityGeometryPointSize = 24,
	SpvCapabilityImageGatherExtended = 25,
	SpvCapabilityStorageImageMultisample = 27,
	SpvCapabilityUniformBufferArrayDynamicIndexing = 28,
	SpvCapabilitySampledImageArrayDynamicIndexing = 29,
	SpvCapabilityStorageBufferArrayDynamicIndexing = 30,
	SpvCapabilityStorageImageArrayDynamicIndexing = 31,
	SpvCapabilityClipDistance = 32,
	SpvCapabilityCullDistance = 33,
	SpvCapabilityImageCubeArray = 34,
	SpvCapabilitySampleRateShading = 35,
	SpvCapabilityImageRect = 36,
	SpvCapabilitySampledRect = 37,
	SpvCapabilityGenericPointer = 38,
	SpvCapabilityInt8 = 39,
	SpvCapabilityInputAttachment = 40,
	SpvCapabilitySparseResidency = 41,
	SpvCapabilityMinLod = 42,
	SpvCapabilitySampled1D = 43,
	SpvCapabilityImage1D = 44,
	SpvCapabilitySampledCubeArray = 45,
	SpvCapabilitySampledBuffer = 46,
	SpvCapabilityImageBuffer = 47,
	SpvCapabilityImageMSArray = 48,
	SpvCapabilityStorageImageExtendedFormats = 49,
	SpvCapabilityImageQuery = 50,
	SpvCapabilityDerivativeControl = 51,
	SpvCapabilityInterpolationFunction = 52,
	SpvCapabilityTransformFeedback = 53,
	SpvCapabilityGeometryStreams = 54,
	SpvCapabilityStorageImageReadWithoutFormat = 55,
	SpvCapabilityStorageImageWriteWithoutFormat = 56,
	SpvCapabilityMultiViewport = 57,
	SpvCapabilitySubgroupDispatch = 58,
	SpvCapabilityNamedBarrier = 59,
	SpvCapabilityPipeStorage = 60,
	SpvCapabilityGroupNonUniform = 61,
	SpvCapabilityGroupNonUniformVote = 62,
	SpvCapabilityGroupNonUniformArithmetic = 63,
	SpvCapabilityGroupNonUniformBallot = 64,
	SpvCapabilityGroupNonUniformShuffle = 65,
	SpvCapabilityGroupNonUniformShuffleRelative = 66,
	SpvCapabilityGroupNonUniformClustered = 67,
	SpvCapabilityGroupNonUniformQuad = 68,
	SpvCapabilityShaderLayer = 69,
	SpvCapabilityShaderViewportIndex = 70,
	SpvCapabilityUniformDecoration = 71,
	SpvCapabilityCoreBuiltinsARM = 4165,
	SpvCapabilityTileImageColorReadAccessEXT = 4166,
	SpvCapabilityTileImageDepthReadAccessEXT = 4167,
	SpvCapabilityTileImageStencilReadAccessEXT = 4168,
	SpvCapabilityTensorsARM = 4174,
	SpvCapabilityStorageTensorArrayDynamicIndexingARM = 4175,
	SpvCapabilityStorageTensorArrayNonUniformIndexingARM = 4176,
	SpvCapabilityGraphARM = 4191,
	SpvCapabilityCooperativeMatrixLayoutsARM = 4201,
	SpvCapabilityFloat8EXT = 4212,
	SpvCapabilityFloat8CooperativeMatrixEXT = 4213,
	SpvCapabilityFragmentShadingRateKHR = 4422,
	SpvCapabilitySubgroupBallotKHR = 4423,
	SpvCapabilityDrawParameters = 4427,
	SpvCapabilityWorkgroupMemoryExplicitLayoutKHR = 4428,
	SpvCapabilityWorkgroupMemoryExplicitLayout8BitAccessKHR = 4429,
	SpvCapabilityWorkgroupMemoryExplicitLayout16BitAccessKHR = 4430,
	SpvCapabilitySubgroupVoteKHR = 4431,
	SpvCapabilityStorageBuffer16BitAccess = 4433,
	SpvCapabilityStorageUniformBufferBlock16 = 4433,
	SpvCapabilityStorageUniform16 = 4434,
	SpvCapabilityUniformAndStorageBuffer16BitAccess = 4434,
	SpvCapabilityStoragePushConstant16 = 4435,
	SpvCapabilityStorageInputOutput16 = 4436,
	SpvCapabilityDeviceGroup = 4437,
	SpvCapabilityMultiView = 4439,
	SpvCapabilityVariablePointersStorageBuffer = 4441,
	SpvCapabilityVariablePointers = 4442,
	SpvCapabilityAtomicStorageOps = 4445,
	SpvCapabilitySampleMaskPostDepthCoverage = 4447,
	SpvCapabilityStorageBuffer8BitAccess = 4448,
	SpvCapabilityUniformAndStorageBuffer8BitAccess = 4449,
	SpvCapabilityStoragePushConstant8 = 4450,
	SpvCapabilityDenormPreserve = 4464,
	SpvCapabilityDenormFlushToZero = 4465,
	SpvCapabilitySignedZeroInfNanPreserve = 4466,
	SpvCapabilityRoundingModeRTE = 4467,
	SpvCapabilityRoundingModeRTZ = 4468,
	SpvCapabilityRayQueryProvisionalKHR = 4471,
	SpvCapabilityRayQueryKHR = 4472,
	SpvCapabilityUntypedPointersKHR = 4473,
	SpvCapabilityRayTraversalPrimitiveCullingKHR = 4478,
	SpvCapabilityRayTracingKHR = 4479,
	SpvCapabilityTextureSampleWeightedQCOM = 4484,
	SpvCapabilityTextureBoxFilterQCOM = 4485,
	SpvCapabilityTextureBlockMatchQCOM = 4486,
	SpvCapabilityTileShadingQCOM = 4495,
	SpvCapabilityCooperativeMatrixConversionQCOM = 4496,
	SpvCapabilityTextureBlockMatch2QCOM = 4498,
	SpvCapabilityFloat16ImageAMD = 5008,
	SpvCapabilityImageGatherBiasLodAMD = 5009,
	SpvCapabilityFragmentMaskAMD = 5010,
	SpvCapabilityStencilExportEXT = 5013,
	SpvCapabilityImageReadWriteLodAMD = 5015,
	SpvCapabilityInt64ImageEXT = 5016,
	SpvCapabilityShaderClockKHR = 5055,
	SpvCapabilityShaderEnqueueAMDX = 5067,
	SpvCapabilityQuadControlKHR = 5087,
	SpvCapabilityInt4TypeINTEL = 5112,
	SpvCapabilityInt4CooperativeMatrixINTEL = 5114,
	SpvCapabilityBFloat16TypeKHR = 5116,
	SpvCapabilityBFloat16DotProductKHR = 5117,
	SpvCapabilityBFloat16CooperativeMatrixKHR = 5118,
	SpvCapabilitySampleMaskOverrideCoverageNV = 5249,
	SpvCapabilityGeometryShaderPassthroughNV = 5251,
	SpvCapabilityShaderViewportIndexLayerEXT = 5254,
	SpvCapabilityShaderViewportIndexLayerNV = 5254,
	SpvCapabilityShaderViewportMaskNV = 5255,
	SpvCapabilityShaderStereoViewNV = 5259,
	SpvCapabilityPerViewAttributesNV = 5260,
	SpvCapabilityFragmentFullyCoveredEXT = 5265,
	SpvCapabilityMeshShadingNV = 5266,
	SpvCapabilityImageFootprintNV = 5282,
	SpvCapabilityMeshShadingEXT = 5283,
	SpvCapabilityFragmentBarycentricKHR = 5284,
	SpvCapabilityFragmentBarycentricNV = 5284,
	SpvCapabilityComputeDerivativeGroupQuadsKHR = 5288,
	SpvCapabilityComputeDerivativeGroupQuadsNV = 5288,
	SpvCapabilityFragmentDensityEXT = 5291,
	SpvCapabilityShadingRateNV = 5291,
	SpvCapabilityGroupNonUniformPartitionedNV = 5297,
	SpvCapabilityShaderNonUniform = 5301,
	SpvCapabilityShaderNonUniformEXT = 5301,
	SpvCapabilityRuntimeDescriptorArray = 5302,
	SpvCapabilityRuntimeDescriptorArrayEXT = 5302,
	SpvCapabilityInputAttachmentArrayDynamicIndexing = 5303,
	SpvCapabilityInputAttachmentArrayDynamicIndexingEXT = 5303,
	SpvCapabilityUniformTexelBufferArrayDynamicIndexing = 5304,
	SpvCapabilityUniformTexelBufferArrayDynamicIndexingEXT = 5304,
	SpvCapabilityStorageTexelBufferArrayDynamicIndexing = 5305,
	SpvCapabilityStorageTexelBufferArrayDynamicIndexingEXT = 5305,
	SpvCapabilityUniformBufferArrayNonUniformIndexing = 5306,
	SpvCapabilityUniformBufferArrayNonUniformIndexingEXT = 5306,
	SpvCapabilitySampledImageArrayNonUniformIndexing = 5307,
	SpvCapabilitySampledImageArrayNonUniformIndexingEXT = 5307,
	SpvCapabilityStorageBufferArrayNonUniformIndexing = 5308,
	SpvCapabilityStorageBufferArrayNonUniformIndexingEXT = 5308,
	SpvCapabilityStorageImageArrayNonUniformIndexing = 5309,
	SpvCapabilityStorageImageArrayNonUniformIndexingEXT = 5309,
	SpvCapabilityInputAttachmentArrayNonUniformIndexing = 5310,
	SpvCapabilityInputAttachmentArrayNonUniformIndexingEXT = 5310,
	SpvCapabilityUniformTexelBufferArrayNonUniformIndexing = 5311,
	SpvCapabilityUniformTexelBufferArrayNonUniformIndexingEXT = 5311,
	SpvCapabilityStorageTexelBufferArrayNonUniformIndexing = 5312,
	SpvCapabilityStorageTexelBufferArrayNonUniformIndexingEXT = 5312,
	SpvCapabilityRayTracingPositionFetchKHR = 5336,
	SpvCapabilityRayTracingNV = 5340,
	SpvCapabilityRayTracingMotionBlurNV = 5341,
	SpvCapabilityVulkanMemoryModel = 5345,
	SpvCapabilityVulkanMemoryModelKHR = 5345,
	SpvCapabilityVulkanMemoryModelDeviceScope = 5346,
	SpvCapabilityVulkanMemoryModelDeviceScopeKHR = 5346,
	SpvCapabilityPhysicalStorageBufferAddresses = 5347,
	SpvCapabilityPhysicalStorageBufferAddressesEXT = 5347,
	SpvCapabilityComputeDerivativeGroupLinearKHR = 5350,
	SpvCapabilityComputeDerivativeGroupLinearNV = 5350,
	SpvCapabilityRayTracingProvisionalKHR = 5353,
	SpvCapabilityCooperativeMatrixNV = 5357,
	SpvCapabilityFragmentShaderSampleInterlockEXT = 5363,
	SpvCapabilityFragmentShaderShadingRateInterlockEXT = 5372,
	SpvCapabilityShaderSMBuiltinsNV = 5373,
	SpvCapabilityFragmentShaderPixelInterlockEXT = 5378,
	SpvCapabilityDemoteToHelperInvocation = 5379,
	SpvCapabilityDemoteToHelperInvocationEXT = 5379,
	SpvCapabilityDisplacementMicromapNV = 5380,
	SpvCapabilityRayTracingOpacityMicromapEXT = 5381,
	SpvCapabilityShaderInvocationReorderNV = 5383,
	SpvCapabilityBindlessTextureNV = 5390,
	SpvCapabilityRayQueryPositionFetchKHR = 5391,
	SpvCapabilityCooperativeVectorNV = 5394,
	SpvCapabilityAtomicFloat16VectorNV = 5404,
	SpvCapabilityRayTracingDisplacementMicromapNV = 5409,
	SpvCapabilityRawAccessChainsNV = 5414,
	SpvCapabilityRayTracingSpheresGeometryNV = 5418,
	SpvCapabilityRayTracingLinearSweptSpheresGeometryNV = 5419,
	SpvCapabilityCooperativeMatrixReductionsNV = 5430,
	SpvCapabilityCooperativeMatrixConversionsNV = 5431,
	SpvCapabilityCooperativeMatrixPerElementOperationsNV = 5432,
	SpvCapabilityCooperativeMatrixTensorAddressingNV = 5433,
	SpvCapabilityCooperativeMatrixBlockLoadsNV = 5434,
	SpvCapabilityCooperativeVectorTrainingNV = 5435,
	SpvCapabilityRayTracingClusterAccelerationStructureNV = 5437,
	SpvCapabilityTensorAddressingNV = 5439,
	SpvCapabilitySubgroupShuffleINTEL = 5568,
	SpvCapabilitySubgroupBufferBlockIOINTEL = 5569,
	SpvCapabilitySubgroupImageBlockIOINTEL = 5570,
	SpvCapabilitySubgroupImageMediaBlockIOINTEL = 5579,
	SpvCapabilityRoundToInfinityINTEL = 5582,
	SpvCapabilityFloatingPointModeINTEL = 5583,
	SpvCapabilityIntegerFunctions2INTEL = 5584,
	SpvCapabilityFunctionPointersINTEL = 5603,
	SpvCapabilityIndirectReferencesINTEL = 5604,
	SpvCapabilityAsmINTEL = 5606,
	SpvCapabilityAtomicFloat32MinMaxEXT = 5612,
	SpvCapabilityAtomicFloat64MinMaxEXT = 5613,
	SpvCapabilityAtomicFloat16MinMaxEXT = 5616,
	SpvCapabilityVectorComputeINTEL = 5617,
	SpvCapabilityVectorAnyINTEL = 5619,
	SpvCapabilityExpectAssumeKHR = 5629,
	SpvCapabilitySubgroupAvcMotionEstimationINTEL = 5696,
	SpvCapabilitySubgroupAvcMotionEstimationIntraINTEL = 5697,
	SpvCapabilitySubgroupAvcMotionEstimationChromaINTEL = 5698,
	SpvCapabilityVariableLengthArrayINTEL = 5817,
	SpvCapabilityFunctionFloatControlINTEL = 5821,
	SpvCapabilityFPGAMemoryAttributesINTEL = 5824,
	SpvCapabilityFPFastMathModeINTEL = 5837,
	SpvCapabilityArbitraryPrecisionIntegersINTEL = 5844,
	SpvCapabilityArbitraryPrecisionFloatingPointINTEL = 5845,
	SpvCapabilityUnstructuredLoopControlsINTEL = 5886,
	SpvCapabilityFPGALoopControlsINTEL = 5888,
	SpvCapabilityKernelAttributesINTEL = 5892,
	SpvCapabilityFPGAKernelAttributesINTEL = 5897,
	SpvCapabilityFPGAMemoryAccessesINTEL = 5898,
	SpvCapabilityFPGAClusterAttributesINTEL = 5904,
	SpvCapabilityLoopFuseINTEL = 5906,
	SpvCapabilityFPGADSPControlINTEL = 5908,
	SpvCapabilityMemoryAccessAliasingINTEL = 5910,
	SpvCapabilityFPGAInvocationPipeliningAttributesINTEL = 5916,
	SpvCapabilityFPGABufferLocationINTEL = 5920,
	SpvCapabilityArbitraryPrecisionFixedPointINTEL = 5922,
	SpvCapabilityUSMStorageClassesINTEL = 5935,
	SpvCapabilityRuntimeAlignedAttributeINTEL = 5939,
	SpvCapabilityIOPipesINTEL = 5943,
	SpvCapabilityBlockingPipesINTEL = 5945,
	SpvCapabilityFPGARegINTEL = 5948,
	SpvCapabilityDotProductInputAll = 6016,
	SpvCapabilityDotProductInputAllKHR = 6016,
	SpvCapabilityDotProductInput4x8Bit = 6017,
	SpvCapabilityDotProductInput4x8BitKHR = 6017,
	SpvCapabilityDotProductInput4x8BitPacked = 6018,
	SpvCapabilityDotProductInput4x8BitPackedKHR = 6018,
	SpvCapabilityDotProduct = 6019,
	SpvCapabilityDotProductKHR = 6019,
	SpvCapabilityRayCullMaskKHR = 6020,
	SpvCapabilityCooperativeMatrixKHR = 6022,
	SpvCapabilityReplicatedCompositesEXT = 6024,
	SpvCapabilityBitInstructions = 6025,
	SpvCapabilityGroupNonUniformRotateKHR = 6026,
	SpvCapabilityFloatControls2 = 6029,
	SpvCapabilityAtomicFloat32AddEXT = 6033,
	SpvCapabilityAtomicFloat64AddEXT = 6034,
	SpvCapabilityLongCompositesINTEL = 6089,
	SpvCapabilityOptNoneEXT = 6094,
	SpvCapabilityOptNoneINTEL = 6094,
	SpvCapabilityAtomicFloat16AddEXT = 6095,
	SpvCapabilityDebugInfoModuleINTEL = 6114,
	SpvCapabilityBFloat16ConversionINTEL = 6115,
	SpvCapabilitySplitBarrierINTEL = 6141,
	SpvCapabilityArithmeticFenceEXT = 6144,
	SpvCapabilityFPGAClusterAttributesV2INTEL = 6150,
	SpvCapabilityFPGAKernelAttributesv2INTEL = 6161,
	SpvCapabilityTaskSequenceINTEL = 6162,
	SpvCapabilityFPMaxErrorINTEL = 6169,
	SpvCapabilityFPGALatencyControlINTEL = 6171,
	SpvCapabilityFPGAArgumentInterfacesINTEL = 6174,
	SpvCapabilityGlobalVariableHostAccessINTEL = 6187,
	SpvCapabilityGlobalVariableFPGADecorationsINTEL = 6189,
	SpvCapabilitySubgroupBufferPrefetchINTEL = 6220,
	SpvCapabilitySubgroup2DBlockIOINTEL = 6228,
	SpvCapabilitySubgroup2DBlockTransformINTEL = 6229,
	SpvCapabilitySubgroup2DBlockTransposeINTEL = 6230,
	SpvCapabilitySubgroupMatrixMultiplyAccumulateINTEL = 6236,
	SpvCapabilityTernaryBitwiseFunctionINTEL = 6241,
	SpvCapabilityUntypedVariableLengthArrayINTEL = 6243,
	SpvCapabilitySpecConditionalINTEL = 6245,
	SpvCapabilityFunctionVariantsINTEL = 6246,
	SpvCapabilityGroupUniformArithmeticKHR = 6400,
	SpvCapabilityTensorFloat32RoundingINTEL = 6425,
	SpvCapabilityMaskedGatherScatterINTEL = 6427,
	SpvCapabilityCacheControlsINTEL = 6441,
	SpvCapabilityRegisterLimitsINTEL = 6460,
	SpvCapabilityBindlessImagesINTEL = 6528,
	SpvCapabilityMax = 0x7fffffff,
}

enum SpvOp: uint32 
{
	SpvOpNop = 0,
	SpvOpUndef = 1,
	SpvOpSourceContinued = 2,
	SpvOpSource = 3,
	SpvOpSourceExtension = 4,
	SpvOpName = 5,
	SpvOpMemberName = 6,
	SpvOpString = 7,
	SpvOpLine = 8,
	SpvOpExtension = 10,
	SpvOpExtInstImport = 11,
	SpvOpExtInst = 12,
	SpvOpMemoryModel = 14,
	SpvOpEntryPoint = 15,
	SpvOpExecutionMode = 16,
	SpvOpCapability = 17,
	SpvOpTypeVoid = 19,
	SpvOpTypeBool = 20,
	SpvOpTypeInt = 21,
	SpvOpTypeFloat = 22,
	SpvOpTypeVector = 23,
	SpvOpTypeMatrix = 24,
	SpvOpTypeImage = 25,
	SpvOpTypeSampler = 26,
	SpvOpTypeSampledImage = 27,
	SpvOpTypeArray = 28,
	SpvOpTypeRuntimeArray = 29,
	SpvOpTypeStruct = 30,
	SpvOpTypeOpaque = 31,
	SpvOpTypePointer = 32,
	SpvOpTypeFunction = 33,
	SpvOpTypeEvent = 34,
	SpvOpTypeDeviceEvent = 35,
	SpvOpTypeReserveId = 36,
	SpvOpTypeQueue = 37,
	SpvOpTypePipe = 38,
	SpvOpTypeForwardPointer = 39,
	SpvOpConstantTrue = 41,
	SpvOpConstantFalse = 42,
	SpvOpConstant = 43,
	SpvOpConstantComposite = 44,
	SpvOpConstantSampler = 45,
	SpvOpConstantNull = 46,
	SpvOpSpecConstantTrue = 48,
	SpvOpSpecConstantFalse = 49,
	SpvOpSpecConstant = 50,
	SpvOpSpecConstantComposite = 51,
	SpvOpSpecConstantOp = 52,
	SpvOpFunction = 54,
	SpvOpFunctionParameter = 55,
	SpvOpFunctionEnd = 56,
	SpvOpFunctionCall = 57,
	SpvOpVariable = 59,
	SpvOpImageTexelPointer = 60,
	SpvOpLoad = 61,
	SpvOpStore = 62,
	SpvOpCopyMemory = 63,
	SpvOpCopyMemorySized = 64,
	SpvOpAccessChain = 65,
	SpvOpInBoundsAccessChain = 66,
	SpvOpPtrAccessChain = 67,
	SpvOpArrayLength = 68,
	SpvOpGenericPtrMemSemantics = 69,
	SpvOpInBoundsPtrAccessChain = 70,
	SpvOpDecorate = 71,
	SpvOpMemberDecorate = 72,
	SpvOpDecorationGroup = 73,
	SpvOpGroupDecorate = 74,
	SpvOpGroupMemberDecorate = 75,
	SpvOpVectorExtractDynamic = 77,
	SpvOpVectorInsertDynamic = 78,
	SpvOpVectorShuffle = 79,
	SpvOpCompositeConstruct = 80,
	SpvOpCompositeExtract = 81,
	SpvOpCompositeInsert = 82,
	SpvOpCopyObject = 83,
	SpvOpTranspose = 84,
	SpvOpSampledImage = 86,
	SpvOpImageSampleImplicitLod = 87,
	SpvOpImageSampleExplicitLod = 88,
	SpvOpImageSampleDrefImplicitLod = 89,
	SpvOpImageSampleDrefExplicitLod = 90,
	SpvOpImageSampleProjImplicitLod = 91,
	SpvOpImageSampleProjExplicitLod = 92,
	SpvOpImageSampleProjDrefImplicitLod = 93,
	SpvOpImageSampleProjDrefExplicitLod = 94,
	SpvOpImageFetch = 95,
	SpvOpImageGather = 96,
	SpvOpImageDrefGather = 97,
	SpvOpImageRead = 98,
	SpvOpImageWrite = 99,
	SpvOpImage = 100,
	SpvOpImageQueryFormat = 101,
	SpvOpImageQueryOrder = 102,
	SpvOpImageQuerySizeLod = 103,
	SpvOpImageQuerySize = 104,
	SpvOpImageQueryLod = 105,
	SpvOpImageQueryLevels = 106,
	SpvOpImageQuerySamples = 107,
	SpvOpConvertFToU = 109,
	SpvOpConvertFToS = 110,
	SpvOpConvertSToF = 111,
	SpvOpConvertUToF = 112,
	SpvOpUConvert = 113,
	SpvOpSConvert = 114,
	SpvOpFConvert = 115,
	SpvOpQuantizeToF16 = 116,
	SpvOpConvertPtrToU = 117,
	SpvOpSatConvertSToU = 118,
	SpvOpSatConvertUToS = 119,
	SpvOpConvertUToPtr = 120,
	SpvOpPtrCastToGeneric = 121,
	SpvOpGenericCastToPtr = 122,
	SpvOpGenericCastToPtrExplicit = 123,
	SpvOpBitcast = 124,
	SpvOpSNegate = 126,
	SpvOpFNegate = 127,
	SpvOpIAdd = 128,
	SpvOpFAdd = 129,
	SpvOpISub = 130,
	SpvOpFSub = 131,
	SpvOpIMul = 132,
	SpvOpFMul = 133,
	SpvOpUDiv = 134,
	SpvOpSDiv = 135,
	SpvOpFDiv = 136,
	SpvOpUMod = 137,
	SpvOpSRem = 138,
	SpvOpSMod = 139,
	SpvOpFRem = 140,
	SpvOpFMod = 141,
	SpvOpVectorTimesScalar = 142,
	SpvOpMatrixTimesScalar = 143,
	SpvOpVectorTimesMatrix = 144,
	SpvOpMatrixTimesVector = 145,
	SpvOpMatrixTimesMatrix = 146,
	SpvOpOuterProduct = 147,
	SpvOpDot = 148,
	SpvOpIAddCarry = 149,
	SpvOpISubBorrow = 150,
	SpvOpUMulExtended = 151,
	SpvOpSMulExtended = 152,
	SpvOpAny = 154,
	SpvOpAll = 155,
	SpvOpIsNan = 156,
	SpvOpIsInf = 157,
	SpvOpIsFinite = 158,
	SpvOpIsNormal = 159,
	SpvOpSignBitSet = 160,
	SpvOpLessOrGreater = 161,
	SpvOpOrdered = 162,
	SpvOpUnordered = 163,
	SpvOpLogicalEqual = 164,
	SpvOpLogicalNotEqual = 165,
	SpvOpLogicalOr = 166,
	SpvOpLogicalAnd = 167,
	SpvOpLogicalNot = 168,
	SpvOpSelect = 169,
	SpvOpIEqual = 170,
	SpvOpINotEqual = 171,
	SpvOpUGreaterThan = 172,
	SpvOpSGreaterThan = 173,
	SpvOpUGreaterThanEqual = 174,
	SpvOpSGreaterThanEqual = 175,
	SpvOpULessThan = 176,
	SpvOpSLessThan = 177,
	SpvOpULessThanEqual = 178,
	SpvOpSLessThanEqual = 179,
	SpvOpFOrdEqual = 180,
	SpvOpFUnordEqual = 181,
	SpvOpFOrdNotEqual = 182,
	SpvOpFUnordNotEqual = 183,
	SpvOpFOrdLessThan = 184,
	SpvOpFUnordLessThan = 185,
	SpvOpFOrdGreaterThan = 186,
	SpvOpFUnordGreaterThan = 187,
	SpvOpFOrdLessThanEqual = 188,
	SpvOpFUnordLessThanEqual = 189,
	SpvOpFOrdGreaterThanEqual = 190,
	SpvOpFUnordGreaterThanEqual = 191,
	SpvOpShiftRightLogical = 194,
	SpvOpShiftRightArithmetic = 195,
	SpvOpShiftLeftLogical = 196,
	SpvOpBitwiseOr = 197,
	SpvOpBitwiseXor = 198,
	SpvOpBitwiseAnd = 199,
	SpvOpNot = 200,
	SpvOpBitFieldInsert = 201,
	SpvOpBitFieldSExtract = 202,
	SpvOpBitFieldUExtract = 203,
	SpvOpBitReverse = 204,
	SpvOpBitCount = 205,
	SpvOpDPdx = 207,
	SpvOpDPdy = 208,
	SpvOpFwidth = 209,
	SpvOpDPdxFine = 210,
	SpvOpDPdyFine = 211,
	SpvOpFwidthFine = 212,
	SpvOpDPdxCoarse = 213,
	SpvOpDPdyCoarse = 214,
	SpvOpFwidthCoarse = 215,
	SpvOpEmitVertex = 218,
	SpvOpEndPrimitive = 219,
	SpvOpEmitStreamVertex = 220,
	SpvOpEndStreamPrimitive = 221,
	SpvOpControlBarrier = 224,
	SpvOpMemoryBarrier = 225,
	SpvOpAtomicLoad = 227,
	SpvOpAtomicStore = 228,
	SpvOpAtomicExchange = 229,
	SpvOpAtomicCompareExchange = 230,
	SpvOpAtomicCompareExchangeWeak = 231,
	SpvOpAtomicIIncrement = 232,
	SpvOpAtomicIDecrement = 233,
	SpvOpAtomicIAdd = 234,
	SpvOpAtomicISub = 235,
	SpvOpAtomicSMin = 236,
	SpvOpAtomicUMin = 237,
	SpvOpAtomicSMax = 238,
	SpvOpAtomicUMax = 239,
	SpvOpAtomicAnd = 240,
	SpvOpAtomicOr = 241,
	SpvOpAtomicXor = 242,
	SpvOpPhi = 245,
	SpvOpLoopMerge = 246,
	SpvOpSelectionMerge = 247,
	SpvOpLabel = 248,
	SpvOpBranch = 249,
	SpvOpBranchConditional = 250,
	SpvOpSwitch = 251,
	SpvOpKill = 252,
	SpvOpReturn = 253,
	SpvOpReturnValue = 254,
	SpvOpUnreachable = 255,
	SpvOpLifetimeStart = 256,
	SpvOpLifetimeStop = 257,
	SpvOpGroupAsyncCopy = 259,
	SpvOpGroupWaitEvents = 260,
	SpvOpGroupAll = 261,
	SpvOpGroupAny = 262,
	SpvOpGroupBroadcast = 263,
	SpvOpGroupIAdd = 264,
	SpvOpGroupFAdd = 265,
	SpvOpGroupFMin = 266,
	SpvOpGroupUMin = 267,
	SpvOpGroupSMin = 268,
	SpvOpGroupFMax = 269,
	SpvOpGroupUMax = 270,
	SpvOpGroupSMax = 271,
	SpvOpReadPipe = 274,
	SpvOpWritePipe = 275,
	SpvOpReservedReadPipe = 276,
	SpvOpReservedWritePipe = 277,
	SpvOpReserveReadPipePackets = 278,
	SpvOpReserveWritePipePackets = 279,
	SpvOpCommitReadPipe = 280,
	SpvOpCommitWritePipe = 281,
	SpvOpIsValidReserveId = 282,
	SpvOpGetNumPipePackets = 283,
	SpvOpGetMaxPipePackets = 284,
	SpvOpGroupReserveReadPipePackets = 285,
	SpvOpGroupReserveWritePipePackets = 286,
	SpvOpGroupCommitReadPipe = 287,
	SpvOpGroupCommitWritePipe = 288,
	SpvOpEnqueueMarker = 291,
	SpvOpEnqueueKernel = 292,
	SpvOpGetKernelNDrangeSubGroupCount = 293,
	SpvOpGetKernelNDrangeMaxSubGroupSize = 294,
	SpvOpGetKernelWorkGroupSize = 295,
	SpvOpGetKernelPreferredWorkGroupSizeMultiple = 296,
	SpvOpRetainEvent = 297,
	SpvOpReleaseEvent = 298,
	SpvOpCreateUserEvent = 299,
	SpvOpIsValidEvent = 300,
	SpvOpSetUserEventStatus = 301,
	SpvOpCaptureEventProfilingInfo = 302,
	SpvOpGetDefaultQueue = 303,
	SpvOpBuildNDRange = 304,
	SpvOpImageSparseSampleImplicitLod = 305,
	SpvOpImageSparseSampleExplicitLod = 306,
	SpvOpImageSparseSampleDrefImplicitLod = 307,
	SpvOpImageSparseSampleDrefExplicitLod = 308,
	SpvOpImageSparseSampleProjImplicitLod = 309,
	SpvOpImageSparseSampleProjExplicitLod = 310,
	SpvOpImageSparseSampleProjDrefImplicitLod = 311,
	SpvOpImageSparseSampleProjDrefExplicitLod = 312,
	SpvOpImageSparseFetch = 313,
	SpvOpImageSparseGather = 314,
	SpvOpImageSparseDrefGather = 315,
	SpvOpImageSparseTexelsResident = 316,
	SpvOpNoLine = 317,
	SpvOpAtomicFlagTestAndSet = 318,
	SpvOpAtomicFlagClear = 319,
	SpvOpImageSparseRead = 320,
	SpvOpSizeOf = 321,
	SpvOpTypePipeStorage = 322,
	SpvOpConstantPipeStorage = 323,
	SpvOpCreatePipeFromPipeStorage = 324,
	SpvOpGetKernelLocalSizeForSubgroupCount = 325,
	SpvOpGetKernelMaxNumSubgroups = 326,
	SpvOpTypeNamedBarrier = 327,
	SpvOpNamedBarrierInitialize = 328,
	SpvOpMemoryNamedBarrier = 329,
	SpvOpModuleProcessed = 330,
	SpvOpExecutionModeId = 331,
	SpvOpDecorateId = 332,
	SpvOpGroupNonUniformElect = 333,
	SpvOpGroupNonUniformAll = 334,
	SpvOpGroupNonUniformAny = 335,
	SpvOpGroupNonUniformAllEqual = 336,
	SpvOpGroupNonUniformBroadcast = 337,
	SpvOpGroupNonUniformBroadcastFirst = 338,
	SpvOpGroupNonUniformBallot = 339,
	SpvOpGroupNonUniformInverseBallot = 340,
	SpvOpGroupNonUniformBallotBitExtract = 341,
	SpvOpGroupNonUniformBallotBitCount = 342,
	SpvOpGroupNonUniformBallotFindLSB = 343,
	SpvOpGroupNonUniformBallotFindMSB = 344,
	SpvOpGroupNonUniformShuffle = 345,
	SpvOpGroupNonUniformShuffleXor = 346,
	SpvOpGroupNonUniformShuffleUp = 347,
	SpvOpGroupNonUniformShuffleDown = 348,
	SpvOpGroupNonUniformIAdd = 349,
	SpvOpGroupNonUniformFAdd = 350,
	SpvOpGroupNonUniformIMul = 351,
	SpvOpGroupNonUniformFMul = 352,
	SpvOpGroupNonUniformSMin = 353,
	SpvOpGroupNonUniformUMin = 354,
	SpvOpGroupNonUniformFMin = 355,
	SpvOpGroupNonUniformSMax = 356,
	SpvOpGroupNonUniformUMax = 357,
	SpvOpGroupNonUniformFMax = 358,
	SpvOpGroupNonUniformBitwiseAnd = 359,
	SpvOpGroupNonUniformBitwiseOr = 360,
	SpvOpGroupNonUniformBitwiseXor = 361,
	SpvOpGroupNonUniformLogicalAnd = 362,
	SpvOpGroupNonUniformLogicalOr = 363,
	SpvOpGroupNonUniformLogicalXor = 364,
	SpvOpGroupNonUniformQuadBroadcast = 365,
	SpvOpGroupNonUniformQuadSwap = 366,
	SpvOpCopyLogical = 400,
	SpvOpPtrEqual = 401,
	SpvOpPtrNotEqual = 402,
	SpvOpPtrDiff = 403,
	SpvOpColorAttachmentReadEXT = 4160,
	SpvOpDepthAttachmentReadEXT = 4161,
	SpvOpStencilAttachmentReadEXT = 4162,
	SpvOpTypeTensorARM = 4163,
	SpvOpTensorReadARM = 4164,
	SpvOpTensorWriteARM = 4165,
	SpvOpTensorQuerySizeARM = 4166,
	SpvOpGraphConstantARM = 4181,
	SpvOpGraphEntryPointARM = 4182,
	SpvOpGraphARM = 4183,
	SpvOpGraphInputARM = 4184,
	SpvOpGraphSetOutputARM = 4185,
	SpvOpGraphEndARM = 4186,
	SpvOpTypeGraphARM = 4190,
	SpvOpTerminateInvocation = 4416,
	SpvOpTypeUntypedPointerKHR = 4417,
	SpvOpUntypedVariableKHR = 4418,
	SpvOpUntypedAccessChainKHR = 4419,
	SpvOpUntypedInBoundsAccessChainKHR = 4420,
	SpvOpSubgroupBallotKHR = 4421,
	SpvOpSubgroupFirstInvocationKHR = 4422,
	SpvOpUntypedPtrAccessChainKHR = 4423,
	SpvOpUntypedInBoundsPtrAccessChainKHR = 4424,
	SpvOpUntypedArrayLengthKHR = 4425,
	SpvOpUntypedPrefetchKHR = 4426,
	SpvOpSubgroupAllKHR = 4428,
	SpvOpSubgroupAnyKHR = 4429,
	SpvOpSubgroupAllEqualKHR = 4430,
	SpvOpGroupNonUniformRotateKHR = 4431,
	SpvOpSubgroupReadInvocationKHR = 4432,
	SpvOpExtInstWithForwardRefsKHR = 4433,
	SpvOpUntypedGroupAsyncCopyKHR = 4434,
	SpvOpTraceRayKHR = 4445,
	SpvOpExecuteCallableKHR = 4446,
	SpvOpConvertUToAccelerationStructureKHR = 4447,
	SpvOpIgnoreIntersectionKHR = 4448,
	SpvOpTerminateRayKHR = 4449,
	SpvOpSDot = 4450,
	SpvOpSDotKHR = 4450,
	SpvOpUDot = 4451,
	SpvOpUDotKHR = 4451,
	SpvOpSUDot = 4452,
	SpvOpSUDotKHR = 4452,
	SpvOpSDotAccSat = 4453,
	SpvOpSDotAccSatKHR = 4453,
	SpvOpUDotAccSat = 4454,
	SpvOpUDotAccSatKHR = 4454,
	SpvOpSUDotAccSat = 4455,
	SpvOpSUDotAccSatKHR = 4455,
	SpvOpTypeCooperativeMatrixKHR = 4456,
	SpvOpCooperativeMatrixLoadKHR = 4457,
	SpvOpCooperativeMatrixStoreKHR = 4458,
	SpvOpCooperativeMatrixMulAddKHR = 4459,
	SpvOpCooperativeMatrixLengthKHR = 4460,
	SpvOpConstantCompositeReplicateEXT = 4461,
	SpvOpSpecConstantCompositeReplicateEXT = 4462,
	SpvOpCompositeConstructReplicateEXT = 4463,
	SpvOpTypeRayQueryKHR = 4472,
	SpvOpRayQueryInitializeKHR = 4473,
	SpvOpRayQueryTerminateKHR = 4474,
	SpvOpRayQueryGenerateIntersectionKHR = 4475,
	SpvOpRayQueryConfirmIntersectionKHR = 4476,
	SpvOpRayQueryProceedKHR = 4477,
	SpvOpRayQueryGetIntersectionTypeKHR = 4479,
	SpvOpImageSampleWeightedQCOM = 4480,
	SpvOpImageBoxFilterQCOM = 4481,
	SpvOpImageBlockMatchSSDQCOM = 4482,
	SpvOpImageBlockMatchSADQCOM = 4483,
	SpvOpBitCastArrayQCOM = 4497,
	SpvOpImageBlockMatchWindowSSDQCOM = 4500,
	SpvOpImageBlockMatchWindowSADQCOM = 4501,
	SpvOpImageBlockMatchGatherSSDQCOM = 4502,
	SpvOpImageBlockMatchGatherSADQCOM = 4503,
	SpvOpCompositeConstructCoopMatQCOM = 4540,
	SpvOpCompositeExtractCoopMatQCOM = 4541,
	SpvOpExtractSubArrayQCOM = 4542,
	SpvOpGroupIAddNonUniformAMD = 5000,
	SpvOpGroupFAddNonUniformAMD = 5001,
	SpvOpGroupFMinNonUniformAMD = 5002,
	SpvOpGroupUMinNonUniformAMD = 5003,
	SpvOpGroupSMinNonUniformAMD = 5004,
	SpvOpGroupFMaxNonUniformAMD = 5005,
	SpvOpGroupUMaxNonUniformAMD = 5006,
	SpvOpGroupSMaxNonUniformAMD = 5007,
	SpvOpFragmentMaskFetchAMD = 5011,
	SpvOpFragmentFetchAMD = 5012,
	SpvOpReadClockKHR = 5056,
	SpvOpAllocateNodePayloadsAMDX = 5074,
	SpvOpEnqueueNodePayloadsAMDX = 5075,
	SpvOpTypeNodePayloadArrayAMDX = 5076,
	SpvOpFinishWritingNodePayloadAMDX = 5078,
	SpvOpNodePayloadArrayLengthAMDX = 5090,
	SpvOpIsNodePayloadValidAMDX = 5101,
	SpvOpConstantStringAMDX = 5103,
	SpvOpSpecConstantStringAMDX = 5104,
	SpvOpGroupNonUniformQuadAllKHR = 5110,
	SpvOpGroupNonUniformQuadAnyKHR = 5111,
	SpvOpHitObjectRecordHitMotionNV = 5249,
	SpvOpHitObjectRecordHitWithIndexMotionNV = 5250,
	SpvOpHitObjectRecordMissMotionNV = 5251,
	SpvOpHitObjectGetWorldToObjectNV = 5252,
	SpvOpHitObjectGetObjectToWorldNV = 5253,
	SpvOpHitObjectGetObjectRayDirectionNV = 5254,
	SpvOpHitObjectGetObjectRayOriginNV = 5255,
	SpvOpHitObjectTraceRayMotionNV = 5256,
	SpvOpHitObjectGetShaderRecordBufferHandleNV = 5257,
	SpvOpHitObjectGetShaderBindingTableRecordIndexNV = 5258,
	SpvOpHitObjectRecordEmptyNV = 5259,
	SpvOpHitObjectTraceRayNV = 5260,
	SpvOpHitObjectRecordHitNV = 5261,
	SpvOpHitObjectRecordHitWithIndexNV = 5262,
	SpvOpHitObjectRecordMissNV = 5263,
	SpvOpHitObjectExecuteShaderNV = 5264,
	SpvOpHitObjectGetCurrentTimeNV = 5265,
	SpvOpHitObjectGetAttributesNV = 5266,
	SpvOpHitObjectGetHitKindNV = 5267,
	SpvOpHitObjectGetPrimitiveIndexNV = 5268,
	SpvOpHitObjectGetGeometryIndexNV = 5269,
	SpvOpHitObjectGetInstanceIdNV = 5270,
	SpvOpHitObjectGetInstanceCustomIndexNV = 5271,
	SpvOpHitObjectGetWorldRayDirectionNV = 5272,
	SpvOpHitObjectGetWorldRayOriginNV = 5273,
	SpvOpHitObjectGetRayTMaxNV = 5274,
	SpvOpHitObjectGetRayTMinNV = 5275,
	SpvOpHitObjectIsEmptyNV = 5276,
	SpvOpHitObjectIsHitNV = 5277,
	SpvOpHitObjectIsMissNV = 5278,
	SpvOpReorderThreadWithHitObjectNV = 5279,
	SpvOpReorderThreadWithHintNV = 5280,
	SpvOpTypeHitObjectNV = 5281,
	SpvOpImageSampleFootprintNV = 5283,
	SpvOpTypeCooperativeVectorNV = 5288,
	SpvOpCooperativeVectorMatrixMulNV = 5289,
	SpvOpCooperativeVectorOuterProductAccumulateNV = 5290,
	SpvOpCooperativeVectorReduceSumAccumulateNV = 5291,
	SpvOpCooperativeVectorMatrixMulAddNV = 5292,
	SpvOpCooperativeMatrixConvertNV = 5293,
	SpvOpEmitMeshTasksEXT = 5294,
	SpvOpSetMeshOutputsEXT = 5295,
	SpvOpGroupNonUniformPartitionNV = 5296,
	SpvOpWritePackedPrimitiveIndices4x8NV = 5299,
	SpvOpFetchMicroTriangleVertexPositionNV = 5300,
	SpvOpFetchMicroTriangleVertexBarycentricNV = 5301,
	SpvOpCooperativeVectorLoadNV = 5302,
	SpvOpCooperativeVectorStoreNV = 5303,
	SpvOpReportIntersectionKHR = 5334,
	SpvOpReportIntersectionNV = 5334,
	SpvOpIgnoreIntersectionNV = 5335,
	SpvOpTerminateRayNV = 5336,
	SpvOpTraceNV = 5337,
	SpvOpTraceMotionNV = 5338,
	SpvOpTraceRayMotionNV = 5339,
	SpvOpRayQueryGetIntersectionTriangleVertexPositionsKHR = 5340,
	SpvOpTypeAccelerationStructureKHR = 5341,
	SpvOpTypeAccelerationStructureNV = 5341,
	SpvOpExecuteCallableNV = 5344,
	SpvOpRayQueryGetClusterIdNV = 5345,
	SpvOpRayQueryGetIntersectionClusterIdNV = 5345,
	SpvOpHitObjectGetClusterIdNV = 5346,
	SpvOpTypeCooperativeMatrixNV = 5358,
	SpvOpCooperativeMatrixLoadNV = 5359,
	SpvOpCooperativeMatrixStoreNV = 5360,
	SpvOpCooperativeMatrixMulAddNV = 5361,
	SpvOpCooperativeMatrixLengthNV = 5362,
	SpvOpBeginInvocationInterlockEXT = 5364,
	SpvOpEndInvocationInterlockEXT = 5365,
	SpvOpCooperativeMatrixReduceNV = 5366,
	SpvOpCooperativeMatrixLoadTensorNV = 5367,
	SpvOpCooperativeMatrixStoreTensorNV = 5368,
	SpvOpCooperativeMatrixPerElementOpNV = 5369,
	SpvOpTypeTensorLayoutNV = 5370,
	SpvOpTypeTensorViewNV = 5371,
	SpvOpCreateTensorLayoutNV = 5372,
	SpvOpTensorLayoutSetDimensionNV = 5373,
	SpvOpTensorLayoutSetStrideNV = 5374,
	SpvOpTensorLayoutSliceNV = 5375,
	SpvOpTensorLayoutSetClampValueNV = 5376,
	SpvOpCreateTensorViewNV = 5377,
	SpvOpTensorViewSetDimensionNV = 5378,
	SpvOpTensorViewSetStrideNV = 5379,
	SpvOpDemoteToHelperInvocation = 5380,
	SpvOpDemoteToHelperInvocationEXT = 5380,
	SpvOpIsHelperInvocationEXT = 5381,
	SpvOpTensorViewSetClipNV = 5382,
	SpvOpTensorLayoutSetBlockSizeNV = 5384,
	SpvOpCooperativeMatrixTransposeNV = 5390,
	SpvOpConvertUToImageNV = 5391,
	SpvOpConvertUToSamplerNV = 5392,
	SpvOpConvertImageToUNV = 5393,
	SpvOpConvertSamplerToUNV = 5394,
	SpvOpConvertUToSampledImageNV = 5395,
	SpvOpConvertSampledImageToUNV = 5396,
	SpvOpSamplerImageAddressingModeNV = 5397,
	SpvOpRawAccessChainNV = 5398,
	SpvOpRayQueryGetIntersectionSpherePositionNV = 5427,
	SpvOpRayQueryGetIntersectionSphereRadiusNV = 5428,
	SpvOpRayQueryGetIntersectionLSSPositionsNV = 5429,
	SpvOpRayQueryGetIntersectionLSSRadiiNV = 5430,
	SpvOpRayQueryGetIntersectionLSSHitValueNV = 5431,
	SpvOpHitObjectGetSpherePositionNV = 5432,
	SpvOpHitObjectGetSphereRadiusNV = 5433,
	SpvOpHitObjectGetLSSPositionsNV = 5434,
	SpvOpHitObjectGetLSSRadiiNV = 5435,
	SpvOpHitObjectIsSphereHitNV = 5436,
	SpvOpHitObjectIsLSSHitNV = 5437,
	SpvOpRayQueryIsSphereHitNV = 5438,
	SpvOpRayQueryIsLSSHitNV = 5439,
	SpvOpSubgroupShuffleINTEL = 5571,
	SpvOpSubgroupShuffleDownINTEL = 5572,
	SpvOpSubgroupShuffleUpINTEL = 5573,
	SpvOpSubgroupShuffleXorINTEL = 5574,
	SpvOpSubgroupBlockReadINTEL = 5575,
	SpvOpSubgroupBlockWriteINTEL = 5576,
	SpvOpSubgroupImageBlockReadINTEL = 5577,
	SpvOpSubgroupImageBlockWriteINTEL = 5578,
	SpvOpSubgroupImageMediaBlockReadINTEL = 5580,
	SpvOpSubgroupImageMediaBlockWriteINTEL = 5581,
	SpvOpUCountLeadingZerosINTEL = 5585,
	SpvOpUCountTrailingZerosINTEL = 5586,
	SpvOpAbsISubINTEL = 5587,
	SpvOpAbsUSubINTEL = 5588,
	SpvOpIAddSatINTEL = 5589,
	SpvOpUAddSatINTEL = 5590,
	SpvOpIAverageINTEL = 5591,
	SpvOpUAverageINTEL = 5592,
	SpvOpIAverageRoundedINTEL = 5593,
	SpvOpUAverageRoundedINTEL = 5594,
	SpvOpISubSatINTEL = 5595,
	SpvOpUSubSatINTEL = 5596,
	SpvOpIMul32x16INTEL = 5597,
	SpvOpUMul32x16INTEL = 5598,
	SpvOpConstantFunctionPointerINTEL = 5600,
	SpvOpFunctionPointerCallINTEL = 5601,
	SpvOpAsmTargetINTEL = 5609,
	SpvOpAsmINTEL = 5610,
	SpvOpAsmCallINTEL = 5611,
	SpvOpAtomicFMinEXT = 5614,
	SpvOpAtomicFMaxEXT = 5615,
	SpvOpAssumeTrueKHR = 5630,
	SpvOpExpectKHR = 5631,
	SpvOpDecorateString = 5632,
	SpvOpDecorateStringGOOGLE = 5632,
	SpvOpMemberDecorateString = 5633,
	SpvOpMemberDecorateStringGOOGLE = 5633,
	SpvOpVmeImageINTEL = 5699,
	SpvOpTypeVmeImageINTEL = 5700,
	SpvOpTypeAvcImePayloadINTEL = 5701,
	SpvOpTypeAvcRefPayloadINTEL = 5702,
	SpvOpTypeAvcSicPayloadINTEL = 5703,
	SpvOpTypeAvcMcePayloadINTEL = 5704,
	SpvOpTypeAvcMceResultINTEL = 5705,
	SpvOpTypeAvcImeResultINTEL = 5706,
	SpvOpTypeAvcImeResultSingleReferenceStreamoutINTEL = 5707,
	SpvOpTypeAvcImeResultDualReferenceStreamoutINTEL = 5708,
	SpvOpTypeAvcImeSingleReferenceStreaminINTEL = 5709,
	SpvOpTypeAvcImeDualReferenceStreaminINTEL = 5710,
	SpvOpTypeAvcRefResultINTEL = 5711,
	SpvOpTypeAvcSicResultINTEL = 5712,
	SpvOpSubgroupAvcMceGetDefaultInterBaseMultiReferencePenaltyINTEL = 5713,
	SpvOpSubgroupAvcMceSetInterBaseMultiReferencePenaltyINTEL = 5714,
	SpvOpSubgroupAvcMceGetDefaultInterShapePenaltyINTEL = 5715,
	SpvOpSubgroupAvcMceSetInterShapePenaltyINTEL = 5716,
	SpvOpSubgroupAvcMceGetDefaultInterDirectionPenaltyINTEL = 5717,
	SpvOpSubgroupAvcMceSetInterDirectionPenaltyINTEL = 5718,
	SpvOpSubgroupAvcMceGetDefaultIntraLumaShapePenaltyINTEL = 5719,
	SpvOpSubgroupAvcMceGetDefaultInterMotionVectorCostTableINTEL = 5720,
	SpvOpSubgroupAvcMceGetDefaultHighPenaltyCostTableINTEL = 5721,
	SpvOpSubgroupAvcMceGetDefaultMediumPenaltyCostTableINTEL = 5722,
	SpvOpSubgroupAvcMceGetDefaultLowPenaltyCostTableINTEL = 5723,
	SpvOpSubgroupAvcMceSetMotionVectorCostFunctionINTEL = 5724,
	SpvOpSubgroupAvcMceGetDefaultIntraLumaModePenaltyINTEL = 5725,
	SpvOpSubgroupAvcMceGetDefaultNonDcLumaIntraPenaltyINTEL = 5726,
	SpvOpSubgroupAvcMceGetDefaultIntraChromaModeBasePenaltyINTEL = 5727,
	SpvOpSubgroupAvcMceSetAcOnlyHaarINTEL = 5728,
	SpvOpSubgroupAvcMceSetSourceInterlacedFieldPolarityINTEL = 5729,
	SpvOpSubgroupAvcMceSetSingleReferenceInterlacedFieldPolarityINTEL = 5730,
	SpvOpSubgroupAvcMceSetDualReferenceInterlacedFieldPolaritiesINTEL = 5731,
	SpvOpSubgroupAvcMceConvertToImePayloadINTEL = 5732,
	SpvOpSubgroupAvcMceConvertToImeResultINTEL = 5733,
	SpvOpSubgroupAvcMceConvertToRefPayloadINTEL = 5734,
	SpvOpSubgroupAvcMceConvertToRefResultINTEL = 5735,
	SpvOpSubgroupAvcMceConvertToSicPayloadINTEL = 5736,
	SpvOpSubgroupAvcMceConvertToSicResultINTEL = 5737,
	SpvOpSubgroupAvcMceGetMotionVectorsINTEL = 5738,
	SpvOpSubgroupAvcMceGetInterDistortionsINTEL = 5739,
	SpvOpSubgroupAvcMceGetBestInterDistortionsINTEL = 5740,
	SpvOpSubgroupAvcMceGetInterMajorShapeINTEL = 5741,
	SpvOpSubgroupAvcMceGetInterMinorShapeINTEL = 5742,
	SpvOpSubgroupAvcMceGetInterDirectionsINTEL = 5743,
	SpvOpSubgroupAvcMceGetInterMotionVectorCountINTEL = 5744,
	SpvOpSubgroupAvcMceGetInterReferenceIdsINTEL = 5745,
	SpvOpSubgroupAvcMceGetInterReferenceInterlacedFieldPolaritiesINTEL = 5746,
	SpvOpSubgroupAvcImeInitializeINTEL = 5747,
	SpvOpSubgroupAvcImeSetSingleReferenceINTEL = 5748,
	SpvOpSubgroupAvcImeSetDualReferenceINTEL = 5749,
	SpvOpSubgroupAvcImeRefWindowSizeINTEL = 5750,
	SpvOpSubgroupAvcImeAdjustRefOffsetINTEL = 5751,
	SpvOpSubgroupAvcImeConvertToMcePayloadINTEL = 5752,
	SpvOpSubgroupAvcImeSetMaxMotionVectorCountINTEL = 5753,
	SpvOpSubgroupAvcImeSetUnidirectionalMixDisableINTEL = 5754,
	SpvOpSubgroupAvcImeSetEarlySearchTerminationThresholdINTEL = 5755,
	SpvOpSubgroupAvcImeSetWeightedSadINTEL = 5756,
	SpvOpSubgroupAvcImeEvaluateWithSingleReferenceINTEL = 5757,
	SpvOpSubgroupAvcImeEvaluateWithDualReferenceINTEL = 5758,
	SpvOpSubgroupAvcImeEvaluateWithSingleReferenceStreaminINTEL = 5759,
	SpvOpSubgroupAvcImeEvaluateWithDualReferenceStreaminINTEL = 5760,
	SpvOpSubgroupAvcImeEvaluateWithSingleReferenceStreamoutINTEL = 5761,
	SpvOpSubgroupAvcImeEvaluateWithDualReferenceStreamoutINTEL = 5762,
	SpvOpSubgroupAvcImeEvaluateWithSingleReferenceStreaminoutINTEL = 5763,
	SpvOpSubgroupAvcImeEvaluateWithDualReferenceStreaminoutINTEL = 5764,
	SpvOpSubgroupAvcImeConvertToMceResultINTEL = 5765,
	SpvOpSubgroupAvcImeGetSingleReferenceStreaminINTEL = 5766,
	SpvOpSubgroupAvcImeGetDualReferenceStreaminINTEL = 5767,
	SpvOpSubgroupAvcImeStripSingleReferenceStreamoutINTEL = 5768,
	SpvOpSubgroupAvcImeStripDualReferenceStreamoutINTEL = 5769,
	SpvOpSubgroupAvcImeGetStreamoutSingleReferenceMajorShapeMotionVectorsINTEL = 5770,
	SpvOpSubgroupAvcImeGetStreamoutSingleReferenceMajorShapeDistortionsINTEL = 5771,
	SpvOpSubgroupAvcImeGetStreamoutSingleReferenceMajorShapeReferenceIdsINTEL = 5772,
	SpvOpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeMotionVectorsINTEL = 5773,
	SpvOpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeDistortionsINTEL = 5774,
	SpvOpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeReferenceIdsINTEL = 5775,
	SpvOpSubgroupAvcImeGetBorderReachedINTEL = 5776,
	SpvOpSubgroupAvcImeGetTruncatedSearchIndicationINTEL = 5777,
	SpvOpSubgroupAvcImeGetUnidirectionalEarlySearchTerminationINTEL = 5778,
	SpvOpSubgroupAvcImeGetWeightingPatternMinimumMotionVectorINTEL = 5779,
	SpvOpSubgroupAvcImeGetWeightingPatternMinimumDistortionINTEL = 5780,
	SpvOpSubgroupAvcFmeInitializeINTEL = 5781,
	SpvOpSubgroupAvcBmeInitializeINTEL = 5782,
	SpvOpSubgroupAvcRefConvertToMcePayloadINTEL = 5783,
	SpvOpSubgroupAvcRefSetBidirectionalMixDisableINTEL = 5784,
	SpvOpSubgroupAvcRefSetBilinearFilterEnableINTEL = 5785,
	SpvOpSubgroupAvcRefEvaluateWithSingleReferenceINTEL = 5786,
	SpvOpSubgroupAvcRefEvaluateWithDualReferenceINTEL = 5787,
	SpvOpSubgroupAvcRefEvaluateWithMultiReferenceINTEL = 5788,
	SpvOpSubgroupAvcRefEvaluateWithMultiReferenceInterlacedINTEL = 5789,
	SpvOpSubgroupAvcRefConvertToMceResultINTEL = 5790,
	SpvOpSubgroupAvcSicInitializeINTEL = 5791,
	SpvOpSubgroupAvcSicConfigureSkcINTEL = 5792,
	SpvOpSubgroupAvcSicConfigureIpeLumaINTEL = 5793,
	SpvOpSubgroupAvcSicConfigureIpeLumaChromaINTEL = 5794,
	SpvOpSubgroupAvcSicGetMotionVectorMaskINTEL = 5795,
	SpvOpSubgroupAvcSicConvertToMcePayloadINTEL = 5796,
	SpvOpSubgroupAvcSicSetIntraLumaShapePenaltyINTEL = 5797,
	SpvOpSubgroupAvcSicSetIntraLumaModeCostFunctionINTEL = 5798,
	SpvOpSubgroupAvcSicSetIntraChromaModeCostFunctionINTEL = 5799,
	SpvOpSubgroupAvcSicSetBilinearFilterEnableINTEL = 5800,
	SpvOpSubgroupAvcSicSetSkcForwardTransformEnableINTEL = 5801,
	SpvOpSubgroupAvcSicSetBlockBasedRawSkipSadINTEL = 5802,
	SpvOpSubgroupAvcSicEvaluateIpeINTEL = 5803,
	SpvOpSubgroupAvcSicEvaluateWithSingleReferenceINTEL = 5804,
	SpvOpSubgroupAvcSicEvaluateWithDualReferenceINTEL = 5805,
	SpvOpSubgroupAvcSicEvaluateWithMultiReferenceINTEL = 5806,
	SpvOpSubgroupAvcSicEvaluateWithMultiReferenceInterlacedINTEL = 5807,
	SpvOpSubgroupAvcSicConvertToMceResultINTEL = 5808,
	SpvOpSubgroupAvcSicGetIpeLumaShapeINTEL = 5809,
	SpvOpSubgroupAvcSicGetBestIpeLumaDistortionINTEL = 5810,
	SpvOpSubgroupAvcSicGetBestIpeChromaDistortionINTEL = 5811,
	SpvOpSubgroupAvcSicGetPackedIpeLumaModesINTEL = 5812,
	SpvOpSubgroupAvcSicGetIpeChromaModeINTEL = 5813,
	SpvOpSubgroupAvcSicGetPackedSkcLumaCountThresholdINTEL = 5814,
	SpvOpSubgroupAvcSicGetPackedSkcLumaSumThresholdINTEL = 5815,
	SpvOpSubgroupAvcSicGetInterRawSadsINTEL = 5816,
	SpvOpVariableLengthArrayINTEL = 5818,
	SpvOpSaveMemoryINTEL = 5819,
	SpvOpRestoreMemoryINTEL = 5820,
	SpvOpArbitraryFloatSinCosPiINTEL = 5840,
	SpvOpArbitraryFloatCastINTEL = 5841,
	SpvOpArbitraryFloatCastFromIntINTEL = 5842,
	SpvOpArbitraryFloatCastToIntINTEL = 5843,
	SpvOpArbitraryFloatAddINTEL = 5846,
	SpvOpArbitraryFloatSubINTEL = 5847,
	SpvOpArbitraryFloatMulINTEL = 5848,
	SpvOpArbitraryFloatDivINTEL = 5849,
	SpvOpArbitraryFloatGTINTEL = 5850,
	SpvOpArbitraryFloatGEINTEL = 5851,
	SpvOpArbitraryFloatLTINTEL = 5852,
	SpvOpArbitraryFloatLEINTEL = 5853,
	SpvOpArbitraryFloatEQINTEL = 5854,
	SpvOpArbitraryFloatRecipINTEL = 5855,
	SpvOpArbitraryFloatRSqrtINTEL = 5856,
	SpvOpArbitraryFloatCbrtINTEL = 5857,
	SpvOpArbitraryFloatHypotINTEL = 5858,
	SpvOpArbitraryFloatSqrtINTEL = 5859,
	SpvOpArbitraryFloatLogINTEL = 5860,
	SpvOpArbitraryFloatLog2INTEL = 5861,
	SpvOpArbitraryFloatLog10INTEL = 5862,
	SpvOpArbitraryFloatLog1pINTEL = 5863,
	SpvOpArbitraryFloatExpINTEL = 5864,
	SpvOpArbitraryFloatExp2INTEL = 5865,
	SpvOpArbitraryFloatExp10INTEL = 5866,
	SpvOpArbitraryFloatExpm1INTEL = 5867,
	SpvOpArbitraryFloatSinINTEL = 5868,
	SpvOpArbitraryFloatCosINTEL = 5869,
	SpvOpArbitraryFloatSinCosINTEL = 5870,
	SpvOpArbitraryFloatSinPiINTEL = 5871,
	SpvOpArbitraryFloatCosPiINTEL = 5872,
	SpvOpArbitraryFloatASinINTEL = 5873,
	SpvOpArbitraryFloatASinPiINTEL = 5874,
	SpvOpArbitraryFloatACosINTEL = 5875,
	SpvOpArbitraryFloatACosPiINTEL = 5876,
	SpvOpArbitraryFloatATanINTEL = 5877,
	SpvOpArbitraryFloatATanPiINTEL = 5878,
	SpvOpArbitraryFloatATan2INTEL = 5879,
	SpvOpArbitraryFloatPowINTEL = 5880,
	SpvOpArbitraryFloatPowRINTEL = 5881,
	SpvOpArbitraryFloatPowNINTEL = 5882,
	SpvOpLoopControlINTEL = 5887,
	SpvOpAliasDomainDeclINTEL = 5911,
	SpvOpAliasScopeDeclINTEL = 5912,
	SpvOpAliasScopeListDeclINTEL = 5913,
	SpvOpFixedSqrtINTEL = 5923,
	SpvOpFixedRecipINTEL = 5924,
	SpvOpFixedRsqrtINTEL = 5925,
	SpvOpFixedSinINTEL = 5926,
	SpvOpFixedCosINTEL = 5927,
	SpvOpFixedSinCosINTEL = 5928,
	SpvOpFixedSinPiINTEL = 5929,
	SpvOpFixedCosPiINTEL = 5930,
	SpvOpFixedSinCosPiINTEL = 5931,
	SpvOpFixedLogINTEL = 5932,
	SpvOpFixedExpINTEL = 5933,
	SpvOpPtrCastToCrossWorkgroupINTEL = 5934,
	SpvOpCrossWorkgroupCastToPtrINTEL = 5938,
	SpvOpReadPipeBlockingINTEL = 5946,
	SpvOpWritePipeBlockingINTEL = 5947,
	SpvOpFPGARegINTEL = 5949,
	SpvOpRayQueryGetRayTMinKHR = 6016,
	SpvOpRayQueryGetRayFlagsKHR = 6017,
	SpvOpRayQueryGetIntersectionTKHR = 6018,
	SpvOpRayQueryGetIntersectionInstanceCustomIndexKHR = 6019,
	SpvOpRayQueryGetIntersectionInstanceIdKHR = 6020,
	SpvOpRayQueryGetIntersectionInstanceShaderBindingTableRecordOffsetKHR = 6021,
	SpvOpRayQueryGetIntersectionGeometryIndexKHR = 6022,
	SpvOpRayQueryGetIntersectionPrimitiveIndexKHR = 6023,
	SpvOpRayQueryGetIntersectionBarycentricsKHR = 6024,
	SpvOpRayQueryGetIntersectionFrontFaceKHR = 6025,
	SpvOpRayQueryGetIntersectionCandidateAABBOpaqueKHR = 6026,
	SpvOpRayQueryGetIntersectionObjectRayDirectionKHR = 6027,
	SpvOpRayQueryGetIntersectionObjectRayOriginKHR = 6028,
	SpvOpRayQueryGetWorldRayDirectionKHR = 6029,
	SpvOpRayQueryGetWorldRayOriginKHR = 6030,
	SpvOpRayQueryGetIntersectionObjectToWorldKHR = 6031,
	SpvOpRayQueryGetIntersectionWorldToObjectKHR = 6032,
	SpvOpAtomicFAddEXT = 6035,
	SpvOpTypeBufferSurfaceINTEL = 6086,
	SpvOpTypeStructContinuedINTEL = 6090,
	SpvOpConstantCompositeContinuedINTEL = 6091,
	SpvOpSpecConstantCompositeContinuedINTEL = 6092,
	SpvOpCompositeConstructContinuedINTEL = 6096,
	SpvOpConvertFToBF16INTEL = 6116,
	SpvOpConvertBF16ToFINTEL = 6117,
	SpvOpControlBarrierArriveINTEL = 6142,
	SpvOpControlBarrierWaitINTEL = 6143,
	SpvOpArithmeticFenceEXT = 6145,
	SpvOpTaskSequenceCreateINTEL = 6163,
	SpvOpTaskSequenceAsyncINTEL = 6164,
	SpvOpTaskSequenceGetINTEL = 6165,
	SpvOpTaskSequenceReleaseINTEL = 6166,
	SpvOpTypeTaskSequenceINTEL = 6199,
	SpvOpSubgroupBlockPrefetchINTEL = 6221,
	SpvOpSubgroup2DBlockLoadINTEL = 6231,
	SpvOpSubgroup2DBlockLoadTransformINTEL = 6232,
	SpvOpSubgroup2DBlockLoadTransposeINTEL = 6233,
	SpvOpSubgroup2DBlockPrefetchINTEL = 6234,
	SpvOpSubgroup2DBlockStoreINTEL = 6235,
	SpvOpSubgroupMatrixMultiplyAccumulateINTEL = 6237,
	SpvOpBitwiseFunctionINTEL = 6242,
	SpvOpUntypedVariableLengthArrayINTEL = 6244,
	SpvOpConditionalExtensionINTEL = 6248,
	SpvOpConditionalEntryPointINTEL = 6249,
	SpvOpConditionalCapabilityINTEL = 6250,
	SpvOpSpecConstantTargetINTEL = 6251,
	SpvOpSpecConstantArchitectureINTEL = 6252,
	SpvOpSpecConstantCapabilitiesINTEL = 6253,
	SpvOpConditionalCopyObjectINTEL = 6254,
	SpvOpGroupIMulKHR = 6401,
	SpvOpGroupFMulKHR = 6402,
	SpvOpGroupBitwiseAndKHR = 6403,
	SpvOpGroupBitwiseOrKHR = 6404,
	SpvOpGroupBitwiseXorKHR = 6405,
	SpvOpGroupLogicalAndKHR = 6406,
	SpvOpGroupLogicalOrKHR = 6407,
	SpvOpGroupLogicalXorKHR = 6408,
	SpvOpRoundFToTF32INTEL = 6426,
	SpvOpMaskedGatherINTEL = 6428,
	SpvOpMaskedScatterINTEL = 6429,
	SpvOpConvertHandleToImageINTEL = 6529,
	SpvOpConvertHandleToSamplerINTEL = 6530,
	SpvOpConvertHandleToSampledImageINTEL = 6531,
	SpvOpMax = 0x7fffffff
}

SPV_REFLECT_MAX_ARRAY_DIMS := 32;
SPV_REFLECT_MAX_DESCRIPTOR_SETS := 64;

SPV_REFLECT_BINDING_NUMBER_DONT_CHANGE := 4294967295;
SPV_REFLECT_SET_NUMBER_DONT_CHANGE := 4294967295;

enum SpvReflectArrayDimType: uint32
{
	SPV_REFLECT_ARRAY_DIM_RUNTIME = 0
}

enum SpvReflectExecutionModeValue: uint32
{
	SPV_REFLECT_EXECUTION_MODE_SPEC_CONSTANT = 4294967295
}

state SpvReflectNumericTraits
{
	scalar: Scalar,
	vector: Vector,
	matrix: Matrix
}

state SpvReflectImageTraits 
{
  dim: SpvDim,
  depth: uint32,
  arrayed: uint32,
  ms: uint32,
  sampled: uint32,
  image_format: SpvImageFormat
}

state Scalar
{
	width: uint32,
	signedness: uint32
}

state Vector
{
	component_count: uint32
}

state Matrix
{
	column_count: uint32,
	row_count: uint32,
	stride: uint32
}

state SpvReflectArrayTraits
{
	dims_count: uint32,
	dims: [32]uint32,
	spec_constant_op_ids: [32]uint32,
	stride: uint32
}

state SpvReflectBindingArrayTraits
{
	dims_count: uint32,
	dims: [32]uint32
}

state SpvReflectDescriptorBinding 
{
  spirv_id: uint32,
  name: *byte,
  binding: uint32,
  input_attachment_index: uint32,
  set: uint32,
  descriptor_type: SpvReflectDescriptorType,
  resource_type: SpvReflectResourceType,
  image: SpvReflectImageTraits,
  block: SpvReflectBlockVariable,
  array: SpvReflectBindingArrayTraits,
  count: uint32,
  accessed: uint32,
  uav_counter_id: uint32,
  uav_counter_binding: *SpvReflectDescriptorBinding,
  byte_address_buffer_offset_count: uint32,
  byte_address_buffer_offsets: *uint32,
  type_description: *SpvReflectTypeDescription,

  word_offset: {
    binding: uint32,
    set: uint32
  },

  decoration_flags: SpvReflectDecorationFlagBits,
  user_type: SpvReflectUserType
}

state SpvReflectTypeDescription 
{
  id: uint32,
  op: SpvOp,
  type_name: *byte,
  struct_member_name: *byte,
  storage_class: int32,
  type_flags: SpvReflectTypeFlagBits,
  decoration_flags: SpvReflectDecorationFlagBits,

  traits: {
    numeric: SpvReflectNumericTraits,
    image: SpvReflectImageTraits,
    array: SpvReflectArrayTraits,
  }

  struct_type_description: *SpvReflectTypeDescription,
  copied: uint32,
  member_count: uint32,
  members: *SpvReflectTypeDescription
}

state SpvReflectInterfaceVariable 
{
  spirv_id: uint32,
  name: *byte,
  location: uint32,
  component: uint32,
  storage_class: SpvStorageClass,
  semantic: *byte,
  decoration_flags: SpvReflectDecorationFlagBits,
  built_in: int32,
  numeric: SpvReflectNumericTraits,
  array: SpvReflectArrayTraits,
  member_count: uint32,
  members: *SpvReflectInterfaceVariable
  format: SpvReflectFormat,
  type_description: *SpvReflectTypeDescription,
  word_offset: uint32,
}

state SpvReflectBlockVariable
{
	spirv_id: uint32,
	name: *byte,
	offset: uint32,
	absolute_offset: uint32,
	size: uint32,
	padded_size: uint32,
	decoration_flags: uint32,
	numeric: SpvReflectNumericTraits,
	array: SpvReflectArrayTraits,
	flags: uint32,
	member_count: uint32,
	members: *SpvReflectBlockVariable,
	type_description: *SpvReflectTypeDescription,
	word_offset: uint32
}

state SpvReflectDescriptorSet
{
	set: uint32,
	binding_count: uint32,
	bindings: **SpvReflectDescriptorBinding
}

state SpvReflectSpecializationConstant
{
	spirv_id: uint32,
	constant_id: uint32,
	name: *byte,
	type_description: *SpvReflectTypeDescription,
	default_value_size: uint32,
	default_value: *void
}

state SpvReflectEntryPoint 
{
	name: *byte,
	id: uint32,
	spirv_execution_model: SpvExecutionModel,
	shader_stage: SpvReflectShaderStageFlagBits,
	input_variable_count: uint32,
	input_variables: **SpvReflectInterfaceVariable,
	output_variable_count: uint32,
	output_variables: **SpvReflectInterfaceVariable,
	interface_variable_count: uint32,
	interface_variables: *SpvReflectInterfaceVariable,
	descriptor_set_count: uint32,
	descriptor_sets: *SpvReflectDescriptorSet,
	used_uniform_count: uint32,
	used_uniforms: *uint32,
	used_push_constant_count: uint32,
	used_push_constants: *uint32,
	execution_mode_count: uint32,
	execution_modes: *SpvExecutionMode,

	local_size: {
		x: uint32,
		y: uint32,
		z: uint32
	},

	invocations: uint32,
	output_vertices: uint32
}

state SpvReflectCapability 
{
  value: SpvCapability,
  word_offset: uint32                          
}

state SpvReflectShaderModule 
{
  generator: SpvReflectGenerator,
  entry_point_name: *byte,
  entry_point_id: uint32,
  entry_point_count: uint32,
  entry_points: *SpvReflectEntryPoint,
  source_language: SpvSourceLanguage,
  source_language_version: uint32,
  source_file: *byte,
  source_source: *byte,
  capability_count: uint32,
  capabilities: *SpvReflectCapability,
  spirv_execution_model: SpvExecutionModel,
  shader_stage: SpvReflectShaderStageFlagBits,
  descriptor_binding_count: uint32,
  descriptor_bindings: *SpvReflectDescriptorBinding,
  descriptor_set_count: uint32,
  descriptor_sets: [SPV_REFLECT_MAX_DESCRIPTOR_SETS]SpvReflectDescriptorSet,
  input_variable_count: uint32,
  input_variables: **SpvReflectInterfaceVariable,
  output_variable_count: uint32,
  output_variables: **SpvReflectInterfaceVariable,
  interface_variable_count: uint32,
  interface_variables: *SpvReflectInterfaceVariable,
  push_constant_block_count: uint32,
  push_constant_blocks: *SpvReflectBlockVariable,
  spec_constant_count: uint32,
  spec_constants: *SpvReflectSpecializationConstant,

  _internal: *{
    module_flags: SpvReflectModuleFlagBits,
    spirv_size: uint,
    spirv_code: *uint32,
    spirv_word_count: uint32,

    type_description_count: uint,
    type_descriptions: *SpvReflectTypeDescription
  }
}